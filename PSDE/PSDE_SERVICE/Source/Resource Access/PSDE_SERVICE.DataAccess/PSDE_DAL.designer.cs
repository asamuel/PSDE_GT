#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.269
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace PSDE_SERVICE.DataAccess
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="ProgramaSDE1")]
	public partial class PSDE_DALDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Definiciones de métodos de extensibilidad
    partial void OnCreated();
    partial void InsertCategoriaUsuario(CategoriaUsuario instance);
    partial void UpdateCategoriaUsuario(CategoriaUsuario instance);
    partial void DeleteCategoriaUsuario(CategoriaUsuario instance);
    partial void InsertFuenteFinanciamiento(FuenteFinanciamiento instance);
    partial void UpdateFuenteFinanciamiento(FuenteFinanciamiento instance);
    partial void DeleteFuenteFinanciamiento(FuenteFinanciamiento instance);
    partial void InsertDepartamento(Departamento instance);
    partial void UpdateDepartamento(Departamento instance);
    partial void DeleteDepartamento(Departamento instance);
    partial void InsertMunicipio(Municipio instance);
    partial void UpdateMunicipio(Municipio instance);
    partial void DeleteMunicipio(Municipio instance);
    partial void InsertSucursal(Sucursal instance);
    partial void UpdateSucursal(Sucursal instance);
    partial void DeleteSucursal(Sucursal instance);
    partial void InsertSectorProductivo(SectorProductivo instance);
    partial void UpdateSectorProductivo(SectorProductivo instance);
    partial void DeleteSectorProductivo(SectorProductivo instance);
    partial void InsertProductoFinanciero(ProductoFinanciero instance);
    partial void UpdateProductoFinanciero(ProductoFinanciero instance);
    partial void DeleteProductoFinanciero(ProductoFinanciero instance);
    partial void InsertUsuario(Usuario instance);
    partial void UpdateUsuario(Usuario instance);
    partial void DeleteUsuario(Usuario instance);
    partial void InsertTipoEvento(TipoEvento instance);
    partial void UpdateTipoEvento(TipoEvento instance);
    partial void DeleteTipoEvento(TipoEvento instance);
    partial void InsertEventos(Eventos instance);
    partial void UpdateEventos(Eventos instance);
    partial void DeleteEventos(Eventos instance);
    partial void InsertIndicador(Indicador instance);
    partial void UpdateIndicador(Indicador instance);
    partial void DeleteIndicador(Indicador instance);
    partial void InsertConvenio(Convenio instance);
    partial void UpdateConvenio(Convenio instance);
    partial void DeleteConvenio(Convenio instance);
    partial void InsertDetalleConvenio(DetalleConvenio instance);
    partial void UpdateDetalleConvenio(DetalleConvenio instance);
    partial void DeleteDetalleConvenio(DetalleConvenio instance);
    partial void InsertHistorial(Historial instance);
    partial void UpdateHistorial(Historial instance);
    partial void DeleteHistorial(Historial instance);
    partial void InsertCliente(Cliente instance);
    partial void UpdateCliente(Cliente instance);
    partial void DeleteCliente(Cliente instance);
    partial void InsertContrato(Contrato instance);
    partial void UpdateContrato(Contrato instance);
    partial void DeleteContrato(Contrato instance);
    partial void InsertGeneralDetalle(GeneralDetalle instance);
    partial void UpdateGeneralDetalle(GeneralDetalle instance);
    partial void DeleteGeneralDetalle(GeneralDetalle instance);
    partial void InsertGeneral(General instance);
    partial void UpdateGeneral(General instance);
    partial void DeleteGeneral(General instance);
    partial void InsertFinca(Finca instance);
    partial void UpdateFinca(Finca instance);
    partial void DeleteFinca(Finca instance);
    #endregion
		
		public PSDE_DALDataContext() : 
				base(global::PSDE_SERVICE.DataAccess.Properties.Settings.Default.ProgramaSDE1ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public PSDE_DALDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public PSDE_DALDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public PSDE_DALDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public PSDE_DALDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<CategoriaUsuario> CategoriaUsuario
		{
			get
			{
				return this.GetTable<CategoriaUsuario>();
			}
		}
		
		public System.Data.Linq.Table<FuenteFinanciamiento> FuenteFinanciamiento
		{
			get
			{
				return this.GetTable<FuenteFinanciamiento>();
			}
		}
		
		public System.Data.Linq.Table<Departamento> Departamento
		{
			get
			{
				return this.GetTable<Departamento>();
			}
		}
		
		public System.Data.Linq.Table<Municipio> Municipio
		{
			get
			{
				return this.GetTable<Municipio>();
			}
		}
		
		public System.Data.Linq.Table<Sucursal> Sucursal
		{
			get
			{
				return this.GetTable<Sucursal>();
			}
		}
		
		public System.Data.Linq.Table<SectorProductivo> SectorProductivo
		{
			get
			{
				return this.GetTable<SectorProductivo>();
			}
		}
		
		public System.Data.Linq.Table<ProductoFinanciero> ProductoFinanciero
		{
			get
			{
				return this.GetTable<ProductoFinanciero>();
			}
		}
		
		public System.Data.Linq.Table<Usuario> Usuario
		{
			get
			{
				return this.GetTable<Usuario>();
			}
		}
		
		public System.Data.Linq.Table<TipoEvento> TipoEvento
		{
			get
			{
				return this.GetTable<TipoEvento>();
			}
		}
		
		public System.Data.Linq.Table<Eventos> Eventos
		{
			get
			{
				return this.GetTable<Eventos>();
			}
		}
		
		public System.Data.Linq.Table<Indicador> Indicador
		{
			get
			{
				return this.GetTable<Indicador>();
			}
		}
		
		public System.Data.Linq.Table<Convenio> Convenio
		{
			get
			{
				return this.GetTable<Convenio>();
			}
		}
		
		public System.Data.Linq.Table<DetalleConvenio> DetalleConvenio
		{
			get
			{
				return this.GetTable<DetalleConvenio>();
			}
		}
		
		public System.Data.Linq.Table<Historial> Historial
		{
			get
			{
				return this.GetTable<Historial>();
			}
		}
		
		public System.Data.Linq.Table<Cliente> Cliente
		{
			get
			{
				return this.GetTable<Cliente>();
			}
		}
		
		public System.Data.Linq.Table<Contrato> Contrato
		{
			get
			{
				return this.GetTable<Contrato>();
			}
		}
		
		public System.Data.Linq.Table<GeneralDetalle> GeneralDetalle
		{
			get
			{
				return this.GetTable<GeneralDetalle>();
			}
		}
		
		public System.Data.Linq.Table<General> General
		{
			get
			{
				return this.GetTable<General>();
			}
		}
		
		public System.Data.Linq.Table<VistaClienteLista> VistaClienteLista
		{
			get
			{
				return this.GetTable<VistaClienteLista>();
			}
		}
		
		public System.Data.Linq.Table<VistaUsuarioLista> VistaUsuarioLista
		{
			get
			{
				return this.GetTable<VistaUsuarioLista>();
			}
		}
		
		public System.Data.Linq.Table<VistaEventos> VistaEventos
		{
			get
			{
				return this.GetTable<VistaEventos>();
			}
		}
		
		public System.Data.Linq.Table<Finca> Finca
		{
			get
			{
				return this.GetTable<Finca>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.insertcategoriausuario")]
		public int insertcategoriausuario([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Nombre", DbType="VarChar(12)")] string nombre, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Descripcion", DbType="VarChar(100)")] string descripcion)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), nombre, descripcion);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.updatecategoriausuario")]
		public int updatecategoriausuario([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Id", DbType="Int")] System.Nullable<int> id, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Nombre", DbType="VarChar(12)")] string nombre, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Descripcion", DbType="VarChar(100)")] string descripcion)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id, nombre, descripcion);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.deletecategoriausuario")]
		public int deletecategoriausuario([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Id", DbType="Int")] System.Nullable<int> id)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.deletefuentefinanciamiento")]
		public int deletefuentefinanciamiento([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Id", DbType="Int")] System.Nullable<int> id)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.insertfuentefinanciamiento")]
		public int insertfuentefinanciamiento([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Nombre", DbType="VarChar(50)")] string nombre)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), nombre);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.updatefuentefinanciamiento")]
		public int updatefuentefinanciamiento([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Id", DbType="Int")] System.Nullable<int> id, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Nombre", DbType="VarChar(50)")] string nombre)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id, nombre);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.insertDepartamento")]
		public int insertDepartamento([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Nombre", DbType="VarChar(30)")] string nombre)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), nombre);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.deleteDepartamento")]
		public int deleteDepartamento([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Id", DbType="Int")] System.Nullable<int> id)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.updateDepartamento")]
		public int updateDepartamento([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Id", DbType="Int")] System.Nullable<int> id, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Nombre", DbType="VarChar(30)")] string nombre)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id, nombre);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.MunicipioDelete")]
		public int MunicipioDelete([global::System.Data.Linq.Mapping.ParameterAttribute(Name="IdMunicipio", DbType="Int")] System.Nullable<int> idMunicipio)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), idMunicipio);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.MunicipioInsert")]
		public int MunicipioInsert([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Nombre", DbType="VarChar(30)")] string nombre, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> idDepartamento)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), nombre, idDepartamento);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.MunicipioUpdate")]
		public int MunicipioUpdate([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Id", DbType="Int")] System.Nullable<int> id, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Nombre", DbType="VarChar(30)")] string nombre, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> idDepartamento)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id, nombre, idDepartamento);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.SucursalDelete")]
		public int SucursalDelete([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Id", DbType="Int")] System.Nullable<int> id)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.SucursalInsert")]
		public int SucursalInsert([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Nombre", DbType="VarChar(50)")] string nombre, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(50)")] string responsable, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> idMunicipio, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(20)")] string telefono)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), nombre, responsable, idMunicipio, telefono);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.SucursalUpdate")]
		public int SucursalUpdate([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Id", DbType="Int")] System.Nullable<int> id, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Nombre", DbType="VarChar(50)")] string nombre, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(100)")] string responsable, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> idMunicipio, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(20)")] string telefono)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id, nombre, responsable, idMunicipio, telefono);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.ProductoFinancieroDelete")]
		public int ProductoFinancieroDelete([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Id", DbType="Int")] System.Nullable<int> id)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.ProductoFinancieroInsert")]
		public int ProductoFinancieroInsert([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Nombre", DbType="VarChar(30)")] string nombre)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), nombre);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.ProductoFinancieroUpdate")]
		public int ProductoFinancieroUpdate([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Id", DbType="Int")] System.Nullable<int> id, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Nombre", DbType="VarChar(30)")] string nombre)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id, nombre);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.SectorProductivoDelete")]
		public int SectorProductivoDelete([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Id", DbType="Int")] System.Nullable<int> id)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.SectorProductivoInsert")]
		public int SectorProductivoInsert([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Nombre", DbType="VarChar(50)")] string nombre)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), nombre);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.SectorProductivoUpdate")]
		public int SectorProductivoUpdate([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Id", DbType="Int")] System.Nullable<int> id, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Nombre", DbType="VarChar(50)")] string nombre)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id, nombre);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.UsuarioDelete")]
		public int UsuarioDelete([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Id", DbType="Int")] System.Nullable<int> id)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.UsuarioUpdate")]
		public int UsuarioUpdate([global::System.Data.Linq.Mapping.ParameterAttribute(Name="IdUsuario", DbType="Int")] System.Nullable<int> idUsuario, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="CodCategoriaUsuario", DbType="Int")] System.Nullable<int> codCategoriaUsuario, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Nombre", DbType="VarChar(30)")] string nombre, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Apellido", DbType="VarChar(30)")] string apellido, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Telefono", DbType="VarChar(20)")] string telefono, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Direccion", DbType="VarChar(100)")] string direccion, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Celular", DbType="VarChar(30)")] string celular, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Cedula", DbType="VarChar(16)")] string cedula, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Responsable", DbType="Int")] System.Nullable<int> responsable)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), idUsuario, codCategoriaUsuario, nombre, apellido, telefono, direccion, celular, cedula, responsable);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.UuarioInsert")]
		public int UuarioInsert([global::System.Data.Linq.Mapping.ParameterAttribute(Name="CodCategoriaUsuario", DbType="Int")] System.Nullable<int> codCategoriaUsuario, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Nombre", DbType="VarChar(30)")] string nombre, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Apellido", DbType="VarChar(30)")] string apellido, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Telefono", DbType="VarChar(20)")] string telefono, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Direccion", DbType="VarChar(100)")] string direccion, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Celular", DbType="VarChar(30)")] string celular, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Cedula", DbType="VarChar(16)")] string cedula, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Responsable", DbType="Int")] System.Nullable<int> responsable)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), codCategoriaUsuario, nombre, apellido, telefono, direccion, celular, cedula, responsable);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.TipoEventoDelete")]
		public int TipoEventoDelete([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Id", DbType="Int")] System.Nullable<int> id)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.TipoEventoInsert")]
		public int TipoEventoInsert([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Evento", DbType="VarChar(20)")] string evento)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), evento);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.TipoEventoUpdate")]
		public int TipoEventoUpdate([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Id", DbType="Int")] System.Nullable<int> id, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Evento", DbType="VarChar(20)")] string evento)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id, evento);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.EventoDelete")]
		public int EventoDelete([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Id", DbType="Int")] System.Nullable<int> id)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.EventoInsert")]
		public int EventoInsert([global::System.Data.Linq.Mapping.ParameterAttribute(Name="CodTipoEvento", DbType="Int")] System.Nullable<int> codTipoEvento, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="TituloEvento", DbType="VarChar(20)")] string tituloEvento)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), codTipoEvento, tituloEvento);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.EventoUpdate")]
		public int EventoUpdate([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Id", DbType="Int")] System.Nullable<int> id, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="CodTipoEvento", DbType="Int")] System.Nullable<int> codTipoEvento, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="TituloEvento", DbType="VarChar(20)")] string tituloEvento)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id, codTipoEvento, tituloEvento);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.deleteindicador")]
		public int deleteindicador([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Id", DbType="Int")] System.Nullable<int> id)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.insertindicador")]
		public int insertindicador([global::System.Data.Linq.Mapping.ParameterAttribute(Name="NombreIndicador", DbType="VarChar(30)")] string nombreIndicador)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), nombreIndicador);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.updateindicador")]
		public int updateindicador([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Id", DbType="Int")] System.Nullable<int> id, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="NombreIndicador", DbType="VarChar(30)")] string nombreIndicador)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id, nombreIndicador);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.ConvenioDelete")]
		public int ConvenioDelete([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Id", DbType="Int")] System.Nullable<int> id)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.ConvenioInsert")]
		public int ConvenioInsert([global::System.Data.Linq.Mapping.ParameterAttribute(Name="FechaInicio", DbType="DateTime")] System.Nullable<System.DateTime> fechaInicio, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="FechaFinal", DbType="DateTime")] System.Nullable<System.DateTime> fechaFinal, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="TotalClientes", DbType="Int")] System.Nullable<int> totalClientes, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="MontoFF", DbType="Float")] System.Nullable<double> montoFF, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="MontoP", DbType="Float")] System.Nullable<double> montoP)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), fechaInicio, fechaFinal, totalClientes, montoFF, montoP);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.ConvenioUpdate")]
		public int ConvenioUpdate([global::System.Data.Linq.Mapping.ParameterAttribute(Name="IdC", DbType="Int")] System.Nullable<int> idC, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="FechaInicio", DbType="DateTime")] System.Nullable<System.DateTime> fechaInicio, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="FechaFinal", DbType="DateTime")] System.Nullable<System.DateTime> fechaFinal, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="TotalClientes", DbType="Int")] System.Nullable<int> totalClientes, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="MontoFF", DbType="Float")] System.Nullable<double> montoFF, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="MontoP", DbType="Float")] System.Nullable<double> montoP)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), idC, fechaInicio, fechaFinal, totalClientes, montoFF, montoP);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.DetalleConvenioDelete")]
		public int DetalleConvenioDelete([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Id", DbType="Int")] System.Nullable<int> id)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.DetalleConvenioInsert")]
		public int DetalleConvenioInsert([global::System.Data.Linq.Mapping.ParameterAttribute(Name="CodConvenio", DbType="Int")] System.Nullable<int> codConvenio, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="CodFuentF", DbType="Int")] System.Nullable<int> codFuentF, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="CodProducto", DbType="Int")] System.Nullable<int> codProducto, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="NumeroClientes", DbType="Int")] System.Nullable<int> numeroClientes, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="InversionCliente", DbType="Float")] System.Nullable<double> inversionCliente)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), codConvenio, codFuentF, codProducto, numeroClientes, inversionCliente);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.DetalleConvenioUpdate")]
		public int DetalleConvenioUpdate([global::System.Data.Linq.Mapping.ParameterAttribute(Name="IdDC", DbType="Int")] System.Nullable<int> idDC, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="CodConvenio", DbType="Int")] System.Nullable<int> codConvenio, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="CodFuentF", DbType="Int")] System.Nullable<int> codFuentF, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="CodProducto", DbType="Int")] System.Nullable<int> codProducto, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="NumeroClientes", DbType="Int")] System.Nullable<int> numeroClientes, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="InversionCliente", DbType="Float")] System.Nullable<double> inversionCliente)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), idDC, codConvenio, codFuentF, codProducto, numeroClientes, inversionCliente);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.HistorialDelete")]
		public int HistorialDelete([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Id", DbType="Int")] System.Nullable<int> id)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.HistorialInsert")]
		public int HistorialInsert([global::System.Data.Linq.Mapping.ParameterAttribute(Name="FechaInicio", DbType="DateTime")] System.Nullable<System.DateTime> fechaInicio, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="FechaFin", DbType="DateTime")] System.Nullable<System.DateTime> fechaFin, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="IdUsuario", DbType="Int")] System.Nullable<int> idUsuario)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), fechaInicio, fechaFin, idUsuario);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.HistorialUpdate")]
		public int HistorialUpdate([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Id", DbType="Int")] System.Nullable<int> id, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="FechaInicio", DbType="DateTime")] System.Nullable<System.DateTime> fechaInicio, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="FechaFin", DbType="DateTime")] System.Nullable<System.DateTime> fechaFin, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="IdUsuario", DbType="Int")] System.Nullable<int> idUsuario)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id, fechaInicio, fechaFin, idUsuario);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.CoordenadaInsert")]
		public int CoordenadaInsert([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Coordenada_X_UTM", DbType="VarChar(20)")] string coordenada_X_UTM, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Coordenada_Y_UTM", DbType="VarChar(20)")] string coordenada_Y_UTM, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Coordenada_Y_GMS", DbType="VarChar(20)")] string coordenada_Y_GMS, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Coordenada_X_GMS", DbType="VarChar(20)")] string coordenada_X_GMS)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), coordenada_X_UTM, coordenada_Y_UTM, coordenada_Y_GMS, coordenada_X_GMS);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.CoordenadasDelete")]
		public int CoordenadasDelete([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Id", DbType="Int")] System.Nullable<int> id)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.CoordenaUpdate")]
		public int CoordenaUpdate([global::System.Data.Linq.Mapping.ParameterAttribute(Name="IdCoordenada", DbType="Int")] System.Nullable<int> idCoordenada, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Coordenada_X_UTM", DbType="VarChar(20)")] string coordenada_X_UTM, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Coordenada_Y_UTM", DbType="VarChar(20)")] string coordenada_Y_UTM, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Coordenada_Y_GMS", DbType="VarChar(20)")] string coordenada_Y_GMS, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Coordenada_X_GMS", DbType="VarChar(20)")] string coordenada_X_GMS)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), idCoordenada, coordenada_X_UTM, coordenada_Y_UTM, coordenada_Y_GMS, coordenada_X_GMS);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.ClienteDelete")]
		public int ClienteDelete([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Id", DbType="Int")] System.Nullable<int> id)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.ClienteInsert")]
		public int ClienteInsert([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Nombre", DbType="VarChar(60)")] string nombre, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Apellido", DbType="VarChar(60)")] string apellido, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Sexo", DbType="Bit")] System.Nullable<bool> sexo, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Cedula", DbType="VarChar(16)")] string cedula, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Edad", DbType="Int")] System.Nullable<int> edad, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Telefono", DbType="VarChar(25)")] string telefono, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Direccion", DbType="VarChar(100)")] string direccion, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Comarca", DbType="VarChar(40)")] string comarca, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="CodWeb", DbType="VarChar(10)")] string codWeb, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="CodMunicipio", DbType="Int")] System.Nullable<int> codMunicipio)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), nombre, apellido, sexo, cedula, edad, telefono, direccion, comarca, codWeb, codMunicipio);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.ClienteUpdate")]
		public int ClienteUpdate([global::System.Data.Linq.Mapping.ParameterAttribute(Name="IdCliente", DbType="Int")] System.Nullable<int> idCliente, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Nombre", DbType="VarChar(60)")] string nombre, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Apellido", DbType="VarChar(60)")] string apellido, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Sexo", DbType="Bit")] System.Nullable<bool> sexo, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Cedula", DbType="VarChar(16)")] string cedula, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Edad", DbType="Int")] System.Nullable<int> edad, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Telefono", DbType="VarChar(25)")] string telefono, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Direccion", DbType="VarChar(100)")] string direccion, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Comarca", DbType="VarChar(40)")] string comarca, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="CodWeb", DbType="VarChar(10)")] string codWeb, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="CodMunicipio", DbType="Int")] System.Nullable<int> codMunicipio)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), idCliente, nombre, apellido, sexo, cedula, edad, telefono, direccion, comarca, codWeb, codMunicipio);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.ContratoInsert")]
		public int ContratoInsert([global::System.Data.Linq.Mapping.ParameterAttribute(Name="CodContrato", DbType="Int")] System.Nullable<int> codContrato, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="CodCliente", DbType="Int")] System.Nullable<int> codCliente, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="CodUsuario", DbType="Int")] System.Nullable<int> codUsuario, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="CodSucursal", DbType="Int")] System.Nullable<int> codSucursal, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="CodConvenio", DbType="Int")] System.Nullable<int> codConvenio, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="CodSectorFinanciero", DbType="Int")] System.Nullable<int> codSectorFinanciero, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="CodProductoFinanciero", DbType="Int")] System.Nullable<int> codProductoFinanciero, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="MontoOtorgado", DbType="Float")] System.Nullable<double> montoOtorgado, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="FechaDesembolso", DbType="Date")] System.Nullable<System.DateTime> fechaDesembolso)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), codContrato, codCliente, codUsuario, codSucursal, codConvenio, codSectorFinanciero, codProductoFinanciero, montoOtorgado, fechaDesembolso);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.ContratoDelete")]
		public int ContratoDelete([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Id", DbType="Int")] System.Nullable<int> id)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.ContratoUpdate")]
		public int ContratoUpdate([global::System.Data.Linq.Mapping.ParameterAttribute(Name="IdContrato", DbType="Int")] System.Nullable<int> idContrato, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="CodContrato", DbType="Int")] System.Nullable<int> codContrato, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="CodCliente", DbType="Int")] System.Nullable<int> codCliente, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="CodUsuario", DbType="Int")] System.Nullable<int> codUsuario, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="CodSucursal", DbType="Int")] System.Nullable<int> codSucursal, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="CodConvenio", DbType="Int")] System.Nullable<int> codConvenio, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="CodSectorFinanciero", DbType="Int")] System.Nullable<int> codSectorFinanciero, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="CodProductoFinanciero", DbType="Int")] System.Nullable<int> codProductoFinanciero, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="MontoOtorgado", DbType="Float")] System.Nullable<double> montoOtorgado, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="FechaDesembolso", DbType="Date")] System.Nullable<System.DateTime> fechaDesembolso)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), idContrato, codContrato, codCliente, codUsuario, codSucursal, codConvenio, codSectorFinanciero, codProductoFinanciero, montoOtorgado, fechaDesembolso);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GeneralDetalleDelete")]
		public int GeneralDetalleDelete([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Id", DbType="Int")] System.Nullable<int> id)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GeneralDetalleInsert")]
		public int GeneralDetalleInsert([global::System.Data.Linq.Mapping.ParameterAttribute(Name="IdIndicador", DbType="Int")] System.Nullable<int> idIndicador, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="AvanceCuantitativo", DbType="Float")] System.Nullable<double> avanceCuantitativo, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="CodEvento", DbType="Int")] System.Nullable<int> codEvento, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Fecha", DbType="DateTime")] System.Nullable<System.DateTime> fecha)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), idIndicador, avanceCuantitativo, codEvento, fecha);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GeneralDetalleUpdate")]
		public int GeneralDetalleUpdate([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Id", DbType="Int")] System.Nullable<int> id, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="IdIndicador", DbType="Int")] System.Nullable<int> idIndicador, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="AvanceCuantitativo", DbType="Float")] System.Nullable<double> avanceCuantitativo, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="CodEvento", DbType="Int")] System.Nullable<int> codEvento, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Fecha", DbType="DateTime")] System.Nullable<System.DateTime> fecha)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id, idIndicador, avanceCuantitativo, codEvento, fecha);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GeneralInsert")]
		public int GeneralInsert([global::System.Data.Linq.Mapping.ParameterAttribute(Name="IdEvento", DbType="Int")] System.Nullable<int> idEvento, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="IdContrato", DbType="Int")] System.Nullable<int> idContrato, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="EventosPactados", DbType="Int")] System.Nullable<int> eventosPactados, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="EventosEjecutados", DbType="Int")] System.Nullable<int> eventosEjecutados, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="FechaInicio", DbType="DateTime")] System.Nullable<System.DateTime> fechaInicio, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="FechaFin", DbType="DateTime")] System.Nullable<System.DateTime> fechaFin, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Estado", DbType="VarChar(50)")] string estado, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Otros", DbType="VarChar(50)")] string otros)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), idEvento, idContrato, eventosPactados, eventosEjecutados, fechaInicio, fechaFin, estado, otros);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GeneralUpdate")]
		public int GeneralUpdate([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Id", DbType="Int")] System.Nullable<int> id, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="IdEvento", DbType="Int")] System.Nullable<int> idEvento, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="IdContrato", DbType="Int")] System.Nullable<int> idContrato, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="EventosPactados", DbType="Int")] System.Nullable<int> eventosPactados, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="EventosEjecutados", DbType="Int")] System.Nullable<int> eventosEjecutados, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="FechaInicio", DbType="DateTime")] System.Nullable<System.DateTime> fechaInicio, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="FechaFin", DbType="DateTime")] System.Nullable<System.DateTime> fechaFin, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Estado", DbType="VarChar(50)")] string estado, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Otros", DbType="VarChar(50)")] string otros)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id, idEvento, idContrato, eventosPactados, eventosEjecutados, fechaInicio, fechaFin, estado, otros);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GeneralDelete")]
		public int GeneralDelete([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Id", DbType="Int")] System.Nullable<int> id)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.FincaDelete")]
		public int FincaDelete([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Id", DbType="Int")] System.Nullable<int> id)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.FincaInsert")]
		public int FincaInsert([global::System.Data.Linq.Mapping.ParameterAttribute(Name="HaTotalFinca", DbType="Float")] System.Nullable<double> haTotalFinca, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="HaEfectiva", DbType="Float")] System.Nullable<double> haEfectiva, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UsoActualSuelo", DbType="Float")] System.Nullable<double> usoActualSuelo, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="CodCliente", DbType="Int")] System.Nullable<int> codCliente, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Coordenada_X_UTM", DbType="VarChar(50)")] string coordenada_X_UTM, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Coordenada_Y_UTM", DbType="VarChar(50)")] string coordenada_Y_UTM, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Coordenada_X_GMS", DbType="VarChar(50)")] string coordenada_X_GMS, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Coordenada_Y_GMS", DbType="VarChar(50)")] string coordenada_Y_GMS)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), haTotalFinca, haEfectiva, usoActualSuelo, codCliente, coordenada_X_UTM, coordenada_Y_UTM, coordenada_X_GMS, coordenada_Y_GMS);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.FincaUpdate")]
		public int FincaUpdate([global::System.Data.Linq.Mapping.ParameterAttribute(Name="IdFinca", DbType="Int")] System.Nullable<int> idFinca, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="HaTotalFinca", DbType="Float")] System.Nullable<double> haTotalFinca, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="HaEfectiva", DbType="Float")] System.Nullable<double> haEfectiva, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UsoActualSuelo", DbType="Float")] System.Nullable<double> usoActualSuelo, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="CodCliente", DbType="Int")] System.Nullable<int> codCliente, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Coordenada_X_UTM", DbType="VarChar(50)")] string coordenada_X_UTM, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Coordenada_Y_UTM", DbType="VarChar(50)")] string coordenada_Y_UTM, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Coordenada_X_GMS", DbType="VarChar(50)")] string coordenada_X_GMS, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Coordenada_Y_GMS", DbType="VarChar(50)")] string coordenada_Y_GMS)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), idFinca, haTotalFinca, haEfectiva, usoActualSuelo, codCliente, coordenada_X_UTM, coordenada_Y_UTM, coordenada_X_GMS, coordenada_Y_GMS);
			return ((int)(result.ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CategoriaUsuario")]
	public partial class CategoriaUsuario : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdCategoria;
		
		private string _Nombre;
		
		private string _Descripcion;
		
		private EntitySet<Usuario> _Usuario;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdCategoriaChanging(int value);
    partial void OnIdCategoriaChanged();
    partial void OnNombreChanging(string value);
    partial void OnNombreChanged();
    partial void OnDescripcionChanging(string value);
    partial void OnDescripcionChanged();
    #endregion
		
		public CategoriaUsuario()
		{
			this._Usuario = new EntitySet<Usuario>(new Action<Usuario>(this.attach_Usuario), new Action<Usuario>(this.detach_Usuario));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdCategoria", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdCategoria
		{
			get
			{
				return this._IdCategoria;
			}
			set
			{
				if ((this._IdCategoria != value))
				{
					this.OnIdCategoriaChanging(value);
					this.SendPropertyChanging();
					this._IdCategoria = value;
					this.SendPropertyChanged("IdCategoria");
					this.OnIdCategoriaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nombre", DbType="VarChar(12) NOT NULL", CanBeNull=false)]
		public string Nombre
		{
			get
			{
				return this._Nombre;
			}
			set
			{
				if ((this._Nombre != value))
				{
					this.OnNombreChanging(value);
					this.SendPropertyChanging();
					this._Nombre = value;
					this.SendPropertyChanged("Nombre");
					this.OnNombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Descripcion", DbType="VarChar(100)")]
		public string Descripcion
		{
			get
			{
				return this._Descripcion;
			}
			set
			{
				if ((this._Descripcion != value))
				{
					this.OnDescripcionChanging(value);
					this.SendPropertyChanging();
					this._Descripcion = value;
					this.SendPropertyChanged("Descripcion");
					this.OnDescripcionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CategoriaUsuario_Usuario", Storage="_Usuario", ThisKey="IdCategoria", OtherKey="CodCategoriaUsuario")]
		public EntitySet<Usuario> Usuario
		{
			get
			{
				return this._Usuario;
			}
			set
			{
				this._Usuario.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Usuario(Usuario entity)
		{
			this.SendPropertyChanging();
			entity.CategoriaUsuario = this;
		}
		
		private void detach_Usuario(Usuario entity)
		{
			this.SendPropertyChanging();
			entity.CategoriaUsuario = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FuenteFinanciamiento")]
	public partial class FuenteFinanciamiento : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idFF;
		
		private string _Nombre;
		
		private EntitySet<DetalleConvenio> _DetalleConvenio;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidFFChanging(int value);
    partial void OnidFFChanged();
    partial void OnNombreChanging(string value);
    partial void OnNombreChanged();
    #endregion
		
		public FuenteFinanciamiento()
		{
			this._DetalleConvenio = new EntitySet<DetalleConvenio>(new Action<DetalleConvenio>(this.attach_DetalleConvenio), new Action<DetalleConvenio>(this.detach_DetalleConvenio));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idFF", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idFF
		{
			get
			{
				return this._idFF;
			}
			set
			{
				if ((this._idFF != value))
				{
					this.OnidFFChanging(value);
					this.SendPropertyChanging();
					this._idFF = value;
					this.SendPropertyChanged("idFF");
					this.OnidFFChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nombre", DbType="VarChar(50)")]
		public string Nombre
		{
			get
			{
				return this._Nombre;
			}
			set
			{
				if ((this._Nombre != value))
				{
					this.OnNombreChanging(value);
					this.SendPropertyChanging();
					this._Nombre = value;
					this.SendPropertyChanged("Nombre");
					this.OnNombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FuenteFinanciamiento_DetalleConvenio", Storage="_DetalleConvenio", ThisKey="idFF", OtherKey="CodFuentF")]
		public EntitySet<DetalleConvenio> DetalleConvenio
		{
			get
			{
				return this._DetalleConvenio;
			}
			set
			{
				this._DetalleConvenio.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DetalleConvenio(DetalleConvenio entity)
		{
			this.SendPropertyChanging();
			entity.FuenteFinanciamiento = this;
		}
		
		private void detach_DetalleConvenio(DetalleConvenio entity)
		{
			this.SendPropertyChanging();
			entity.FuenteFinanciamiento = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Departamento")]
	public partial class Departamento : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idDepartamento;
		
		private string _Nombre;
		
		private EntitySet<Municipio> _Municipio;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidDepartamentoChanging(int value);
    partial void OnidDepartamentoChanged();
    partial void OnNombreChanging(string value);
    partial void OnNombreChanged();
    #endregion
		
		public Departamento()
		{
			this._Municipio = new EntitySet<Municipio>(new Action<Municipio>(this.attach_Municipio), new Action<Municipio>(this.detach_Municipio));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idDepartamento", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idDepartamento
		{
			get
			{
				return this._idDepartamento;
			}
			set
			{
				if ((this._idDepartamento != value))
				{
					this.OnidDepartamentoChanging(value);
					this.SendPropertyChanging();
					this._idDepartamento = value;
					this.SendPropertyChanged("idDepartamento");
					this.OnidDepartamentoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nombre", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string Nombre
		{
			get
			{
				return this._Nombre;
			}
			set
			{
				if ((this._Nombre != value))
				{
					this.OnNombreChanging(value);
					this.SendPropertyChanging();
					this._Nombre = value;
					this.SendPropertyChanged("Nombre");
					this.OnNombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Departamento_Municipio", Storage="_Municipio", ThisKey="idDepartamento", OtherKey="idDepartamento")]
		public EntitySet<Municipio> Municipio
		{
			get
			{
				return this._Municipio;
			}
			set
			{
				this._Municipio.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Municipio(Municipio entity)
		{
			this.SendPropertyChanging();
			entity.Departamento = this;
		}
		
		private void detach_Municipio(Municipio entity)
		{
			this.SendPropertyChanging();
			entity.Departamento = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Municipio")]
	public partial class Municipio : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idMunicipio;
		
		private string _Nombre;
		
		private int _idDepartamento;
		
		private EntitySet<Sucursal> _Sucursal;
		
		private EntitySet<Cliente> _Cliente;
		
		private EntityRef<Departamento> _Departamento;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidMunicipioChanging(int value);
    partial void OnidMunicipioChanged();
    partial void OnNombreChanging(string value);
    partial void OnNombreChanged();
    partial void OnidDepartamentoChanging(int value);
    partial void OnidDepartamentoChanged();
    #endregion
		
		public Municipio()
		{
			this._Sucursal = new EntitySet<Sucursal>(new Action<Sucursal>(this.attach_Sucursal), new Action<Sucursal>(this.detach_Sucursal));
			this._Cliente = new EntitySet<Cliente>(new Action<Cliente>(this.attach_Cliente), new Action<Cliente>(this.detach_Cliente));
			this._Departamento = default(EntityRef<Departamento>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idMunicipio", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idMunicipio
		{
			get
			{
				return this._idMunicipio;
			}
			set
			{
				if ((this._idMunicipio != value))
				{
					this.OnidMunicipioChanging(value);
					this.SendPropertyChanging();
					this._idMunicipio = value;
					this.SendPropertyChanged("idMunicipio");
					this.OnidMunicipioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nombre", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string Nombre
		{
			get
			{
				return this._Nombre;
			}
			set
			{
				if ((this._Nombre != value))
				{
					this.OnNombreChanging(value);
					this.SendPropertyChanging();
					this._Nombre = value;
					this.SendPropertyChanged("Nombre");
					this.OnNombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idDepartamento", DbType="Int NOT NULL")]
		public int idDepartamento
		{
			get
			{
				return this._idDepartamento;
			}
			set
			{
				if ((this._idDepartamento != value))
				{
					if (this._Departamento.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidDepartamentoChanging(value);
					this.SendPropertyChanging();
					this._idDepartamento = value;
					this.SendPropertyChanged("idDepartamento");
					this.OnidDepartamentoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Municipio_Sucursal", Storage="_Sucursal", ThisKey="idMunicipio", OtherKey="idMunicipio")]
		public EntitySet<Sucursal> Sucursal
		{
			get
			{
				return this._Sucursal;
			}
			set
			{
				this._Sucursal.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Municipio_Cliente", Storage="_Cliente", ThisKey="idMunicipio", OtherKey="CodMunicipio")]
		public EntitySet<Cliente> Cliente
		{
			get
			{
				return this._Cliente;
			}
			set
			{
				this._Cliente.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Departamento_Municipio", Storage="_Departamento", ThisKey="idDepartamento", OtherKey="idDepartamento", IsForeignKey=true)]
		public Departamento Departamento
		{
			get
			{
				return this._Departamento.Entity;
			}
			set
			{
				Departamento previousValue = this._Departamento.Entity;
				if (((previousValue != value) 
							|| (this._Departamento.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Departamento.Entity = null;
						previousValue.Municipio.Remove(this);
					}
					this._Departamento.Entity = value;
					if ((value != null))
					{
						value.Municipio.Add(this);
						this._idDepartamento = value.idDepartamento;
					}
					else
					{
						this._idDepartamento = default(int);
					}
					this.SendPropertyChanged("Departamento");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Sucursal(Sucursal entity)
		{
			this.SendPropertyChanging();
			entity.Municipio = this;
		}
		
		private void detach_Sucursal(Sucursal entity)
		{
			this.SendPropertyChanging();
			entity.Municipio = null;
		}
		
		private void attach_Cliente(Cliente entity)
		{
			this.SendPropertyChanging();
			entity.Municipio = this;
		}
		
		private void detach_Cliente(Cliente entity)
		{
			this.SendPropertyChanging();
			entity.Municipio = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Sucursal")]
	public partial class Sucursal : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdSucursal;
		
		private string _Nombre;
		
		private string _responsable;
		
		private System.Nullable<int> _idMunicipio;
		
		private string _telefono;
		
		private EntitySet<Contrato> _Contrato;
		
		private EntityRef<Municipio> _Municipio;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdSucursalChanging(int value);
    partial void OnIdSucursalChanged();
    partial void OnNombreChanging(string value);
    partial void OnNombreChanged();
    partial void OnresponsableChanging(string value);
    partial void OnresponsableChanged();
    partial void OnidMunicipioChanging(System.Nullable<int> value);
    partial void OnidMunicipioChanged();
    partial void OntelefonoChanging(string value);
    partial void OntelefonoChanged();
    #endregion
		
		public Sucursal()
		{
			this._Contrato = new EntitySet<Contrato>(new Action<Contrato>(this.attach_Contrato), new Action<Contrato>(this.detach_Contrato));
			this._Municipio = default(EntityRef<Municipio>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdSucursal", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdSucursal
		{
			get
			{
				return this._IdSucursal;
			}
			set
			{
				if ((this._IdSucursal != value))
				{
					this.OnIdSucursalChanging(value);
					this.SendPropertyChanging();
					this._IdSucursal = value;
					this.SendPropertyChanged("IdSucursal");
					this.OnIdSucursalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nombre", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Nombre
		{
			get
			{
				return this._Nombre;
			}
			set
			{
				if ((this._Nombre != value))
				{
					this.OnNombreChanging(value);
					this.SendPropertyChanging();
					this._Nombre = value;
					this.SendPropertyChanged("Nombre");
					this.OnNombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_responsable", DbType="VarChar(50)")]
		public string responsable
		{
			get
			{
				return this._responsable;
			}
			set
			{
				if ((this._responsable != value))
				{
					this.OnresponsableChanging(value);
					this.SendPropertyChanging();
					this._responsable = value;
					this.SendPropertyChanged("responsable");
					this.OnresponsableChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idMunicipio", DbType="Int")]
		public System.Nullable<int> idMunicipio
		{
			get
			{
				return this._idMunicipio;
			}
			set
			{
				if ((this._idMunicipio != value))
				{
					if (this._Municipio.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidMunicipioChanging(value);
					this.SendPropertyChanging();
					this._idMunicipio = value;
					this.SendPropertyChanged("idMunicipio");
					this.OnidMunicipioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_telefono", DbType="VarChar(20)")]
		public string telefono
		{
			get
			{
				return this._telefono;
			}
			set
			{
				if ((this._telefono != value))
				{
					this.OntelefonoChanging(value);
					this.SendPropertyChanging();
					this._telefono = value;
					this.SendPropertyChanged("telefono");
					this.OntelefonoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Sucursal_Contrato", Storage="_Contrato", ThisKey="IdSucursal", OtherKey="CodSucursal")]
		public EntitySet<Contrato> Contrato
		{
			get
			{
				return this._Contrato;
			}
			set
			{
				this._Contrato.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Municipio_Sucursal", Storage="_Municipio", ThisKey="idMunicipio", OtherKey="idMunicipio", IsForeignKey=true)]
		public Municipio Municipio
		{
			get
			{
				return this._Municipio.Entity;
			}
			set
			{
				Municipio previousValue = this._Municipio.Entity;
				if (((previousValue != value) 
							|| (this._Municipio.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Municipio.Entity = null;
						previousValue.Sucursal.Remove(this);
					}
					this._Municipio.Entity = value;
					if ((value != null))
					{
						value.Sucursal.Add(this);
						this._idMunicipio = value.idMunicipio;
					}
					else
					{
						this._idMunicipio = default(Nullable<int>);
					}
					this.SendPropertyChanged("Municipio");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Contrato(Contrato entity)
		{
			this.SendPropertyChanging();
			entity.Sucursal = this;
		}
		
		private void detach_Contrato(Contrato entity)
		{
			this.SendPropertyChanging();
			entity.Sucursal = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SectorProductivo")]
	public partial class SectorProductivo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Nombre;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNombreChanging(string value);
    partial void OnNombreChanged();
    #endregion
		
		public SectorProductivo()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nombre", DbType="VarChar(50)")]
		public string Nombre
		{
			get
			{
				return this._Nombre;
			}
			set
			{
				if ((this._Nombre != value))
				{
					this.OnNombreChanging(value);
					this.SendPropertyChanging();
					this._Nombre = value;
					this.SendPropertyChanged("Nombre");
					this.OnNombreChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ProductoFinanciero")]
	public partial class ProductoFinanciero : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdProducto;
		
		private string _Nombre;
		
		private EntitySet<DetalleConvenio> _DetalleConvenio;
		
		private EntitySet<Contrato> _Contrato;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdProductoChanging(int value);
    partial void OnIdProductoChanged();
    partial void OnNombreChanging(string value);
    partial void OnNombreChanged();
    #endregion
		
		public ProductoFinanciero()
		{
			this._DetalleConvenio = new EntitySet<DetalleConvenio>(new Action<DetalleConvenio>(this.attach_DetalleConvenio), new Action<DetalleConvenio>(this.detach_DetalleConvenio));
			this._Contrato = new EntitySet<Contrato>(new Action<Contrato>(this.attach_Contrato), new Action<Contrato>(this.detach_Contrato));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdProducto", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdProducto
		{
			get
			{
				return this._IdProducto;
			}
			set
			{
				if ((this._IdProducto != value))
				{
					this.OnIdProductoChanging(value);
					this.SendPropertyChanging();
					this._IdProducto = value;
					this.SendPropertyChanged("IdProducto");
					this.OnIdProductoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nombre", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string Nombre
		{
			get
			{
				return this._Nombre;
			}
			set
			{
				if ((this._Nombre != value))
				{
					this.OnNombreChanging(value);
					this.SendPropertyChanging();
					this._Nombre = value;
					this.SendPropertyChanged("Nombre");
					this.OnNombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProductoFinanciero_DetalleConvenio", Storage="_DetalleConvenio", ThisKey="IdProducto", OtherKey="CodProducto")]
		public EntitySet<DetalleConvenio> DetalleConvenio
		{
			get
			{
				return this._DetalleConvenio;
			}
			set
			{
				this._DetalleConvenio.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProductoFinanciero_Contrato", Storage="_Contrato", ThisKey="IdProducto", OtherKey="CodProductoFinanciero")]
		public EntitySet<Contrato> Contrato
		{
			get
			{
				return this._Contrato;
			}
			set
			{
				this._Contrato.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DetalleConvenio(DetalleConvenio entity)
		{
			this.SendPropertyChanging();
			entity.ProductoFinanciero = this;
		}
		
		private void detach_DetalleConvenio(DetalleConvenio entity)
		{
			this.SendPropertyChanging();
			entity.ProductoFinanciero = null;
		}
		
		private void attach_Contrato(Contrato entity)
		{
			this.SendPropertyChanging();
			entity.ProductoFinanciero = this;
		}
		
		private void detach_Contrato(Contrato entity)
		{
			this.SendPropertyChanging();
			entity.ProductoFinanciero = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Usuario")]
	public partial class Usuario : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdUsuario;
		
		private int _CodCategoriaUsuario;
		
		private string _Nombre;
		
		private string _Apellido;
		
		private string _Telefono;
		
		private string _Direccion;
		
		private string _Celular;
		
		private string _Cedula;
		
		private System.Nullable<int> _Responsable;
		
		private EntitySet<Usuario> _Usuario2;
		
		private EntitySet<Historial> _Historial;
		
		private EntitySet<Contrato> _Contrato;
		
		private EntityRef<CategoriaUsuario> _CategoriaUsuario;
		
		private EntityRef<Usuario> _Usuario1;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdUsuarioChanging(int value);
    partial void OnIdUsuarioChanged();
    partial void OnCodCategoriaUsuarioChanging(int value);
    partial void OnCodCategoriaUsuarioChanged();
    partial void OnNombreChanging(string value);
    partial void OnNombreChanged();
    partial void OnApellidoChanging(string value);
    partial void OnApellidoChanged();
    partial void OnTelefonoChanging(string value);
    partial void OnTelefonoChanged();
    partial void OnDireccionChanging(string value);
    partial void OnDireccionChanged();
    partial void OnCelularChanging(string value);
    partial void OnCelularChanged();
    partial void OnCedulaChanging(string value);
    partial void OnCedulaChanged();
    partial void OnResponsableChanging(System.Nullable<int> value);
    partial void OnResponsableChanged();
    #endregion
		
		public Usuario()
		{
			this._Usuario2 = new EntitySet<Usuario>(new Action<Usuario>(this.attach_Usuario2), new Action<Usuario>(this.detach_Usuario2));
			this._Historial = new EntitySet<Historial>(new Action<Historial>(this.attach_Historial), new Action<Historial>(this.detach_Historial));
			this._Contrato = new EntitySet<Contrato>(new Action<Contrato>(this.attach_Contrato), new Action<Contrato>(this.detach_Contrato));
			this._CategoriaUsuario = default(EntityRef<CategoriaUsuario>);
			this._Usuario1 = default(EntityRef<Usuario>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdUsuario", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdUsuario
		{
			get
			{
				return this._IdUsuario;
			}
			set
			{
				if ((this._IdUsuario != value))
				{
					this.OnIdUsuarioChanging(value);
					this.SendPropertyChanging();
					this._IdUsuario = value;
					this.SendPropertyChanged("IdUsuario");
					this.OnIdUsuarioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodCategoriaUsuario", DbType="Int NOT NULL")]
		public int CodCategoriaUsuario
		{
			get
			{
				return this._CodCategoriaUsuario;
			}
			set
			{
				if ((this._CodCategoriaUsuario != value))
				{
					if (this._CategoriaUsuario.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCodCategoriaUsuarioChanging(value);
					this.SendPropertyChanging();
					this._CodCategoriaUsuario = value;
					this.SendPropertyChanged("CodCategoriaUsuario");
					this.OnCodCategoriaUsuarioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nombre", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string Nombre
		{
			get
			{
				return this._Nombre;
			}
			set
			{
				if ((this._Nombre != value))
				{
					this.OnNombreChanging(value);
					this.SendPropertyChanging();
					this._Nombre = value;
					this.SendPropertyChanged("Nombre");
					this.OnNombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Apellido", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string Apellido
		{
			get
			{
				return this._Apellido;
			}
			set
			{
				if ((this._Apellido != value))
				{
					this.OnApellidoChanging(value);
					this.SendPropertyChanging();
					this._Apellido = value;
					this.SendPropertyChanged("Apellido");
					this.OnApellidoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Telefono", DbType="VarChar(20)")]
		public string Telefono
		{
			get
			{
				return this._Telefono;
			}
			set
			{
				if ((this._Telefono != value))
				{
					this.OnTelefonoChanging(value);
					this.SendPropertyChanging();
					this._Telefono = value;
					this.SendPropertyChanged("Telefono");
					this.OnTelefonoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Direccion", DbType="VarChar(100)")]
		public string Direccion
		{
			get
			{
				return this._Direccion;
			}
			set
			{
				if ((this._Direccion != value))
				{
					this.OnDireccionChanging(value);
					this.SendPropertyChanging();
					this._Direccion = value;
					this.SendPropertyChanged("Direccion");
					this.OnDireccionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Celular", DbType="VarChar(30)")]
		public string Celular
		{
			get
			{
				return this._Celular;
			}
			set
			{
				if ((this._Celular != value))
				{
					this.OnCelularChanging(value);
					this.SendPropertyChanging();
					this._Celular = value;
					this.SendPropertyChanged("Celular");
					this.OnCelularChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cedula", DbType="VarChar(16)")]
		public string Cedula
		{
			get
			{
				return this._Cedula;
			}
			set
			{
				if ((this._Cedula != value))
				{
					this.OnCedulaChanging(value);
					this.SendPropertyChanging();
					this._Cedula = value;
					this.SendPropertyChanged("Cedula");
					this.OnCedulaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Responsable", DbType="Int")]
		public System.Nullable<int> Responsable
		{
			get
			{
				return this._Responsable;
			}
			set
			{
				if ((this._Responsable != value))
				{
					if (this._Usuario1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnResponsableChanging(value);
					this.SendPropertyChanging();
					this._Responsable = value;
					this.SendPropertyChanged("Responsable");
					this.OnResponsableChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Usuario_Usuario", Storage="_Usuario2", ThisKey="IdUsuario", OtherKey="Responsable")]
		public EntitySet<Usuario> Usuario2
		{
			get
			{
				return this._Usuario2;
			}
			set
			{
				this._Usuario2.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Usuario_Historial", Storage="_Historial", ThisKey="IdUsuario", OtherKey="IdUsuario")]
		public EntitySet<Historial> Historial
		{
			get
			{
				return this._Historial;
			}
			set
			{
				this._Historial.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Usuario_Contrato", Storage="_Contrato", ThisKey="IdUsuario", OtherKey="CodUsuario")]
		public EntitySet<Contrato> Contrato
		{
			get
			{
				return this._Contrato;
			}
			set
			{
				this._Contrato.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CategoriaUsuario_Usuario", Storage="_CategoriaUsuario", ThisKey="CodCategoriaUsuario", OtherKey="IdCategoria", IsForeignKey=true)]
		public CategoriaUsuario CategoriaUsuario
		{
			get
			{
				return this._CategoriaUsuario.Entity;
			}
			set
			{
				CategoriaUsuario previousValue = this._CategoriaUsuario.Entity;
				if (((previousValue != value) 
							|| (this._CategoriaUsuario.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CategoriaUsuario.Entity = null;
						previousValue.Usuario.Remove(this);
					}
					this._CategoriaUsuario.Entity = value;
					if ((value != null))
					{
						value.Usuario.Add(this);
						this._CodCategoriaUsuario = value.IdCategoria;
					}
					else
					{
						this._CodCategoriaUsuario = default(int);
					}
					this.SendPropertyChanged("CategoriaUsuario");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Usuario_Usuario", Storage="_Usuario1", ThisKey="Responsable", OtherKey="IdUsuario", IsForeignKey=true)]
		public Usuario Usuario1
		{
			get
			{
				return this._Usuario1.Entity;
			}
			set
			{
				Usuario previousValue = this._Usuario1.Entity;
				if (((previousValue != value) 
							|| (this._Usuario1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Usuario1.Entity = null;
						previousValue.Usuario2.Remove(this);
					}
					this._Usuario1.Entity = value;
					if ((value != null))
					{
						value.Usuario2.Add(this);
						this._Responsable = value.IdUsuario;
					}
					else
					{
						this._Responsable = default(Nullable<int>);
					}
					this.SendPropertyChanged("Usuario1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Usuario2(Usuario entity)
		{
			this.SendPropertyChanging();
			entity.Usuario1 = this;
		}
		
		private void detach_Usuario2(Usuario entity)
		{
			this.SendPropertyChanging();
			entity.Usuario1 = null;
		}
		
		private void attach_Historial(Historial entity)
		{
			this.SendPropertyChanging();
			entity.Usuario = this;
		}
		
		private void detach_Historial(Historial entity)
		{
			this.SendPropertyChanging();
			entity.Usuario = null;
		}
		
		private void attach_Contrato(Contrato entity)
		{
			this.SendPropertyChanging();
			entity.Usuario = this;
		}
		
		private void detach_Contrato(Contrato entity)
		{
			this.SendPropertyChanging();
			entity.Usuario = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TipoEvento")]
	public partial class TipoEvento : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdTipoEvento;
		
		private string _Evento;
		
		private EntitySet<Eventos> _Eventos;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdTipoEventoChanging(int value);
    partial void OnIdTipoEventoChanged();
    partial void OnEventoChanging(string value);
    partial void OnEventoChanged();
    #endregion
		
		public TipoEvento()
		{
			this._Eventos = new EntitySet<Eventos>(new Action<Eventos>(this.attach_Eventos), new Action<Eventos>(this.detach_Eventos));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdTipoEvento", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdTipoEvento
		{
			get
			{
				return this._IdTipoEvento;
			}
			set
			{
				if ((this._IdTipoEvento != value))
				{
					this.OnIdTipoEventoChanging(value);
					this.SendPropertyChanging();
					this._IdTipoEvento = value;
					this.SendPropertyChanged("IdTipoEvento");
					this.OnIdTipoEventoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Evento", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string Evento
		{
			get
			{
				return this._Evento;
			}
			set
			{
				if ((this._Evento != value))
				{
					this.OnEventoChanging(value);
					this.SendPropertyChanging();
					this._Evento = value;
					this.SendPropertyChanged("Evento");
					this.OnEventoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TipoEvento_Eventos", Storage="_Eventos", ThisKey="IdTipoEvento", OtherKey="CodTipoEvento")]
		public EntitySet<Eventos> Eventos
		{
			get
			{
				return this._Eventos;
			}
			set
			{
				this._Eventos.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Eventos(Eventos entity)
		{
			this.SendPropertyChanging();
			entity.TipoEvento = this;
		}
		
		private void detach_Eventos(Eventos entity)
		{
			this.SendPropertyChanging();
			entity.TipoEvento = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Eventos")]
	public partial class Eventos : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdEvento;
		
		private int _CodTipoEvento;
		
		private string _TituloEvento;
		
		private EntitySet<General> _General;
		
		private EntityRef<TipoEvento> _TipoEvento;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdEventoChanging(int value);
    partial void OnIdEventoChanged();
    partial void OnCodTipoEventoChanging(int value);
    partial void OnCodTipoEventoChanged();
    partial void OnTituloEventoChanging(string value);
    partial void OnTituloEventoChanged();
    #endregion
		
		public Eventos()
		{
			this._General = new EntitySet<General>(new Action<General>(this.attach_General), new Action<General>(this.detach_General));
			this._TipoEvento = default(EntityRef<TipoEvento>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdEvento", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdEvento
		{
			get
			{
				return this._IdEvento;
			}
			set
			{
				if ((this._IdEvento != value))
				{
					this.OnIdEventoChanging(value);
					this.SendPropertyChanging();
					this._IdEvento = value;
					this.SendPropertyChanged("IdEvento");
					this.OnIdEventoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodTipoEvento", DbType="Int NOT NULL")]
		public int CodTipoEvento
		{
			get
			{
				return this._CodTipoEvento;
			}
			set
			{
				if ((this._CodTipoEvento != value))
				{
					if (this._TipoEvento.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCodTipoEventoChanging(value);
					this.SendPropertyChanging();
					this._CodTipoEvento = value;
					this.SendPropertyChanged("CodTipoEvento");
					this.OnCodTipoEventoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TituloEvento", DbType="VarChar(20)")]
		public string TituloEvento
		{
			get
			{
				return this._TituloEvento;
			}
			set
			{
				if ((this._TituloEvento != value))
				{
					this.OnTituloEventoChanging(value);
					this.SendPropertyChanging();
					this._TituloEvento = value;
					this.SendPropertyChanged("TituloEvento");
					this.OnTituloEventoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Eventos_General", Storage="_General", ThisKey="IdEvento", OtherKey="IdEvento")]
		public EntitySet<General> General
		{
			get
			{
				return this._General;
			}
			set
			{
				this._General.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TipoEvento_Eventos", Storage="_TipoEvento", ThisKey="CodTipoEvento", OtherKey="IdTipoEvento", IsForeignKey=true)]
		public TipoEvento TipoEvento
		{
			get
			{
				return this._TipoEvento.Entity;
			}
			set
			{
				TipoEvento previousValue = this._TipoEvento.Entity;
				if (((previousValue != value) 
							|| (this._TipoEvento.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TipoEvento.Entity = null;
						previousValue.Eventos.Remove(this);
					}
					this._TipoEvento.Entity = value;
					if ((value != null))
					{
						value.Eventos.Add(this);
						this._CodTipoEvento = value.IdTipoEvento;
					}
					else
					{
						this._CodTipoEvento = default(int);
					}
					this.SendPropertyChanged("TipoEvento");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_General(General entity)
		{
			this.SendPropertyChanging();
			entity.Eventos = this;
		}
		
		private void detach_General(General entity)
		{
			this.SendPropertyChanging();
			entity.Eventos = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Indicador")]
	public partial class Indicador : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdIndicador;
		
		private string _NombreIndicador;
		
		private EntitySet<GeneralDetalle> _GeneralDetalle;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdIndicadorChanging(int value);
    partial void OnIdIndicadorChanged();
    partial void OnNombreIndicadorChanging(string value);
    partial void OnNombreIndicadorChanged();
    #endregion
		
		public Indicador()
		{
			this._GeneralDetalle = new EntitySet<GeneralDetalle>(new Action<GeneralDetalle>(this.attach_GeneralDetalle), new Action<GeneralDetalle>(this.detach_GeneralDetalle));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdIndicador", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdIndicador
		{
			get
			{
				return this._IdIndicador;
			}
			set
			{
				if ((this._IdIndicador != value))
				{
					this.OnIdIndicadorChanging(value);
					this.SendPropertyChanging();
					this._IdIndicador = value;
					this.SendPropertyChanged("IdIndicador");
					this.OnIdIndicadorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NombreIndicador", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string NombreIndicador
		{
			get
			{
				return this._NombreIndicador;
			}
			set
			{
				if ((this._NombreIndicador != value))
				{
					this.OnNombreIndicadorChanging(value);
					this.SendPropertyChanging();
					this._NombreIndicador = value;
					this.SendPropertyChanged("NombreIndicador");
					this.OnNombreIndicadorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Indicador_GeneralDetalle", Storage="_GeneralDetalle", ThisKey="IdIndicador", OtherKey="IdIndicador")]
		public EntitySet<GeneralDetalle> GeneralDetalle
		{
			get
			{
				return this._GeneralDetalle;
			}
			set
			{
				this._GeneralDetalle.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_GeneralDetalle(GeneralDetalle entity)
		{
			this.SendPropertyChanging();
			entity.Indicador = this;
		}
		
		private void detach_GeneralDetalle(GeneralDetalle entity)
		{
			this.SendPropertyChanging();
			entity.Indicador = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Convenio")]
	public partial class Convenio : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdC;
		
		private System.Nullable<System.DateTime> _FechaInicio;
		
		private System.Nullable<System.DateTime> _FechaFinal;
		
		private System.Nullable<int> _TotalClientes;
		
		private System.Nullable<double> _MontoFF;
		
		private System.Nullable<double> _MontoP;
		
		private EntitySet<DetalleConvenio> _DetalleConvenio;
		
		private EntitySet<Contrato> _Contrato;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdCChanging(int value);
    partial void OnIdCChanged();
    partial void OnFechaInicioChanging(System.Nullable<System.DateTime> value);
    partial void OnFechaInicioChanged();
    partial void OnFechaFinalChanging(System.Nullable<System.DateTime> value);
    partial void OnFechaFinalChanged();
    partial void OnTotalClientesChanging(System.Nullable<int> value);
    partial void OnTotalClientesChanged();
    partial void OnMontoFFChanging(System.Nullable<double> value);
    partial void OnMontoFFChanged();
    partial void OnMontoPChanging(System.Nullable<double> value);
    partial void OnMontoPChanged();
    #endregion
		
		public Convenio()
		{
			this._DetalleConvenio = new EntitySet<DetalleConvenio>(new Action<DetalleConvenio>(this.attach_DetalleConvenio), new Action<DetalleConvenio>(this.detach_DetalleConvenio));
			this._Contrato = new EntitySet<Contrato>(new Action<Contrato>(this.attach_Contrato), new Action<Contrato>(this.detach_Contrato));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdC", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdC
		{
			get
			{
				return this._IdC;
			}
			set
			{
				if ((this._IdC != value))
				{
					this.OnIdCChanging(value);
					this.SendPropertyChanging();
					this._IdC = value;
					this.SendPropertyChanged("IdC");
					this.OnIdCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FechaInicio", DbType="DateTime")]
		public System.Nullable<System.DateTime> FechaInicio
		{
			get
			{
				return this._FechaInicio;
			}
			set
			{
				if ((this._FechaInicio != value))
				{
					this.OnFechaInicioChanging(value);
					this.SendPropertyChanging();
					this._FechaInicio = value;
					this.SendPropertyChanged("FechaInicio");
					this.OnFechaInicioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FechaFinal", DbType="DateTime")]
		public System.Nullable<System.DateTime> FechaFinal
		{
			get
			{
				return this._FechaFinal;
			}
			set
			{
				if ((this._FechaFinal != value))
				{
					this.OnFechaFinalChanging(value);
					this.SendPropertyChanging();
					this._FechaFinal = value;
					this.SendPropertyChanged("FechaFinal");
					this.OnFechaFinalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalClientes", DbType="Int")]
		public System.Nullable<int> TotalClientes
		{
			get
			{
				return this._TotalClientes;
			}
			set
			{
				if ((this._TotalClientes != value))
				{
					this.OnTotalClientesChanging(value);
					this.SendPropertyChanging();
					this._TotalClientes = value;
					this.SendPropertyChanged("TotalClientes");
					this.OnTotalClientesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MontoFF", DbType="Float")]
		public System.Nullable<double> MontoFF
		{
			get
			{
				return this._MontoFF;
			}
			set
			{
				if ((this._MontoFF != value))
				{
					this.OnMontoFFChanging(value);
					this.SendPropertyChanging();
					this._MontoFF = value;
					this.SendPropertyChanged("MontoFF");
					this.OnMontoFFChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MontoP", DbType="Float")]
		public System.Nullable<double> MontoP
		{
			get
			{
				return this._MontoP;
			}
			set
			{
				if ((this._MontoP != value))
				{
					this.OnMontoPChanging(value);
					this.SendPropertyChanging();
					this._MontoP = value;
					this.SendPropertyChanged("MontoP");
					this.OnMontoPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Convenio_DetalleConvenio", Storage="_DetalleConvenio", ThisKey="IdC", OtherKey="CodConvenio")]
		public EntitySet<DetalleConvenio> DetalleConvenio
		{
			get
			{
				return this._DetalleConvenio;
			}
			set
			{
				this._DetalleConvenio.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Convenio_Contrato", Storage="_Contrato", ThisKey="IdC", OtherKey="CodConvenio")]
		public EntitySet<Contrato> Contrato
		{
			get
			{
				return this._Contrato;
			}
			set
			{
				this._Contrato.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DetalleConvenio(DetalleConvenio entity)
		{
			this.SendPropertyChanging();
			entity.Convenio = this;
		}
		
		private void detach_DetalleConvenio(DetalleConvenio entity)
		{
			this.SendPropertyChanging();
			entity.Convenio = null;
		}
		
		private void attach_Contrato(Contrato entity)
		{
			this.SendPropertyChanging();
			entity.Convenio = this;
		}
		
		private void detach_Contrato(Contrato entity)
		{
			this.SendPropertyChanging();
			entity.Convenio = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DetalleConvenio")]
	public partial class DetalleConvenio : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdDC;
		
		private int _CodConvenio;
		
		private int _CodFuentF;
		
		private int _CodProducto;
		
		private System.Nullable<int> _NumeroClientes;
		
		private System.Nullable<double> _InversionCliente;
		
		private EntityRef<Convenio> _Convenio;
		
		private EntityRef<FuenteFinanciamiento> _FuenteFinanciamiento;
		
		private EntityRef<ProductoFinanciero> _ProductoFinanciero;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdDCChanging(int value);
    partial void OnIdDCChanged();
    partial void OnCodConvenioChanging(int value);
    partial void OnCodConvenioChanged();
    partial void OnCodFuentFChanging(int value);
    partial void OnCodFuentFChanged();
    partial void OnCodProductoChanging(int value);
    partial void OnCodProductoChanged();
    partial void OnNumeroClientesChanging(System.Nullable<int> value);
    partial void OnNumeroClientesChanged();
    partial void OnInversionClienteChanging(System.Nullable<double> value);
    partial void OnInversionClienteChanged();
    #endregion
		
		public DetalleConvenio()
		{
			this._Convenio = default(EntityRef<Convenio>);
			this._FuenteFinanciamiento = default(EntityRef<FuenteFinanciamiento>);
			this._ProductoFinanciero = default(EntityRef<ProductoFinanciero>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdDC", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdDC
		{
			get
			{
				return this._IdDC;
			}
			set
			{
				if ((this._IdDC != value))
				{
					this.OnIdDCChanging(value);
					this.SendPropertyChanging();
					this._IdDC = value;
					this.SendPropertyChanged("IdDC");
					this.OnIdDCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodConvenio", DbType="Int NOT NULL")]
		public int CodConvenio
		{
			get
			{
				return this._CodConvenio;
			}
			set
			{
				if ((this._CodConvenio != value))
				{
					if (this._Convenio.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCodConvenioChanging(value);
					this.SendPropertyChanging();
					this._CodConvenio = value;
					this.SendPropertyChanged("CodConvenio");
					this.OnCodConvenioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodFuentF", DbType="Int NOT NULL")]
		public int CodFuentF
		{
			get
			{
				return this._CodFuentF;
			}
			set
			{
				if ((this._CodFuentF != value))
				{
					if (this._FuenteFinanciamiento.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCodFuentFChanging(value);
					this.SendPropertyChanging();
					this._CodFuentF = value;
					this.SendPropertyChanged("CodFuentF");
					this.OnCodFuentFChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodProducto", DbType="Int NOT NULL")]
		public int CodProducto
		{
			get
			{
				return this._CodProducto;
			}
			set
			{
				if ((this._CodProducto != value))
				{
					if (this._ProductoFinanciero.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCodProductoChanging(value);
					this.SendPropertyChanging();
					this._CodProducto = value;
					this.SendPropertyChanged("CodProducto");
					this.OnCodProductoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumeroClientes", DbType="Int")]
		public System.Nullable<int> NumeroClientes
		{
			get
			{
				return this._NumeroClientes;
			}
			set
			{
				if ((this._NumeroClientes != value))
				{
					this.OnNumeroClientesChanging(value);
					this.SendPropertyChanging();
					this._NumeroClientes = value;
					this.SendPropertyChanged("NumeroClientes");
					this.OnNumeroClientesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InversionCliente", DbType="Float")]
		public System.Nullable<double> InversionCliente
		{
			get
			{
				return this._InversionCliente;
			}
			set
			{
				if ((this._InversionCliente != value))
				{
					this.OnInversionClienteChanging(value);
					this.SendPropertyChanging();
					this._InversionCliente = value;
					this.SendPropertyChanged("InversionCliente");
					this.OnInversionClienteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Convenio_DetalleConvenio", Storage="_Convenio", ThisKey="CodConvenio", OtherKey="IdC", IsForeignKey=true)]
		public Convenio Convenio
		{
			get
			{
				return this._Convenio.Entity;
			}
			set
			{
				Convenio previousValue = this._Convenio.Entity;
				if (((previousValue != value) 
							|| (this._Convenio.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Convenio.Entity = null;
						previousValue.DetalleConvenio.Remove(this);
					}
					this._Convenio.Entity = value;
					if ((value != null))
					{
						value.DetalleConvenio.Add(this);
						this._CodConvenio = value.IdC;
					}
					else
					{
						this._CodConvenio = default(int);
					}
					this.SendPropertyChanged("Convenio");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FuenteFinanciamiento_DetalleConvenio", Storage="_FuenteFinanciamiento", ThisKey="CodFuentF", OtherKey="idFF", IsForeignKey=true)]
		public FuenteFinanciamiento FuenteFinanciamiento
		{
			get
			{
				return this._FuenteFinanciamiento.Entity;
			}
			set
			{
				FuenteFinanciamiento previousValue = this._FuenteFinanciamiento.Entity;
				if (((previousValue != value) 
							|| (this._FuenteFinanciamiento.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FuenteFinanciamiento.Entity = null;
						previousValue.DetalleConvenio.Remove(this);
					}
					this._FuenteFinanciamiento.Entity = value;
					if ((value != null))
					{
						value.DetalleConvenio.Add(this);
						this._CodFuentF = value.idFF;
					}
					else
					{
						this._CodFuentF = default(int);
					}
					this.SendPropertyChanged("FuenteFinanciamiento");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProductoFinanciero_DetalleConvenio", Storage="_ProductoFinanciero", ThisKey="CodProducto", OtherKey="IdProducto", IsForeignKey=true)]
		public ProductoFinanciero ProductoFinanciero
		{
			get
			{
				return this._ProductoFinanciero.Entity;
			}
			set
			{
				ProductoFinanciero previousValue = this._ProductoFinanciero.Entity;
				if (((previousValue != value) 
							|| (this._ProductoFinanciero.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ProductoFinanciero.Entity = null;
						previousValue.DetalleConvenio.Remove(this);
					}
					this._ProductoFinanciero.Entity = value;
					if ((value != null))
					{
						value.DetalleConvenio.Add(this);
						this._CodProducto = value.IdProducto;
					}
					else
					{
						this._CodProducto = default(int);
					}
					this.SendPropertyChanged("ProductoFinanciero");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Historial")]
	public partial class Historial : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.DateTime _FechaInicio;
		
		private System.DateTime _FechaFin;
		
		private int _IdUsuario;
		
		private EntityRef<Usuario> _Usuario;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnFechaInicioChanging(System.DateTime value);
    partial void OnFechaInicioChanged();
    partial void OnFechaFinChanging(System.DateTime value);
    partial void OnFechaFinChanged();
    partial void OnIdUsuarioChanging(int value);
    partial void OnIdUsuarioChanged();
    #endregion
		
		public Historial()
		{
			this._Usuario = default(EntityRef<Usuario>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FechaInicio", DbType="DateTime NOT NULL")]
		public System.DateTime FechaInicio
		{
			get
			{
				return this._FechaInicio;
			}
			set
			{
				if ((this._FechaInicio != value))
				{
					this.OnFechaInicioChanging(value);
					this.SendPropertyChanging();
					this._FechaInicio = value;
					this.SendPropertyChanged("FechaInicio");
					this.OnFechaInicioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FechaFin", DbType="DateTime NOT NULL")]
		public System.DateTime FechaFin
		{
			get
			{
				return this._FechaFin;
			}
			set
			{
				if ((this._FechaFin != value))
				{
					this.OnFechaFinChanging(value);
					this.SendPropertyChanging();
					this._FechaFin = value;
					this.SendPropertyChanged("FechaFin");
					this.OnFechaFinChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdUsuario", DbType="Int NOT NULL")]
		public int IdUsuario
		{
			get
			{
				return this._IdUsuario;
			}
			set
			{
				if ((this._IdUsuario != value))
				{
					if (this._Usuario.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdUsuarioChanging(value);
					this.SendPropertyChanging();
					this._IdUsuario = value;
					this.SendPropertyChanged("IdUsuario");
					this.OnIdUsuarioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Usuario_Historial", Storage="_Usuario", ThisKey="IdUsuario", OtherKey="IdUsuario", IsForeignKey=true)]
		public Usuario Usuario
		{
			get
			{
				return this._Usuario.Entity;
			}
			set
			{
				Usuario previousValue = this._Usuario.Entity;
				if (((previousValue != value) 
							|| (this._Usuario.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Usuario.Entity = null;
						previousValue.Historial.Remove(this);
					}
					this._Usuario.Entity = value;
					if ((value != null))
					{
						value.Historial.Add(this);
						this._IdUsuario = value.IdUsuario;
					}
					else
					{
						this._IdUsuario = default(int);
					}
					this.SendPropertyChanged("Usuario");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Cliente")]
	public partial class Cliente : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdCliente;
		
		private string _Nombre;
		
		private string _Apellido;
		
		private System.Nullable<bool> _Sexo;
		
		private string _Cedula;
		
		private System.Nullable<int> _Edad;
		
		private string _Telefono;
		
		private string _Direccion;
		
		private string _Comarca;
		
		private string _CodWeb;
		
		private int _CodMunicipio;
		
		private EntitySet<Contrato> _Contrato;
		
		private EntitySet<Finca> _Finca;
		
		private EntityRef<Municipio> _Municipio;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdClienteChanging(int value);
    partial void OnIdClienteChanged();
    partial void OnNombreChanging(string value);
    partial void OnNombreChanged();
    partial void OnApellidoChanging(string value);
    partial void OnApellidoChanged();
    partial void OnSexoChanging(System.Nullable<bool> value);
    partial void OnSexoChanged();
    partial void OnCedulaChanging(string value);
    partial void OnCedulaChanged();
    partial void OnEdadChanging(System.Nullable<int> value);
    partial void OnEdadChanged();
    partial void OnTelefonoChanging(string value);
    partial void OnTelefonoChanged();
    partial void OnDireccionChanging(string value);
    partial void OnDireccionChanged();
    partial void OnComarcaChanging(string value);
    partial void OnComarcaChanged();
    partial void OnCodWebChanging(string value);
    partial void OnCodWebChanged();
    partial void OnCodMunicipioChanging(int value);
    partial void OnCodMunicipioChanged();
    #endregion
		
		public Cliente()
		{
			this._Contrato = new EntitySet<Contrato>(new Action<Contrato>(this.attach_Contrato), new Action<Contrato>(this.detach_Contrato));
			this._Finca = new EntitySet<Finca>(new Action<Finca>(this.attach_Finca), new Action<Finca>(this.detach_Finca));
			this._Municipio = default(EntityRef<Municipio>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdCliente", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdCliente
		{
			get
			{
				return this._IdCliente;
			}
			set
			{
				if ((this._IdCliente != value))
				{
					this.OnIdClienteChanging(value);
					this.SendPropertyChanging();
					this._IdCliente = value;
					this.SendPropertyChanged("IdCliente");
					this.OnIdClienteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nombre", DbType="VarChar(60) NOT NULL", CanBeNull=false)]
		public string Nombre
		{
			get
			{
				return this._Nombre;
			}
			set
			{
				if ((this._Nombre != value))
				{
					this.OnNombreChanging(value);
					this.SendPropertyChanging();
					this._Nombre = value;
					this.SendPropertyChanged("Nombre");
					this.OnNombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Apellido", DbType="VarChar(60) NOT NULL", CanBeNull=false)]
		public string Apellido
		{
			get
			{
				return this._Apellido;
			}
			set
			{
				if ((this._Apellido != value))
				{
					this.OnApellidoChanging(value);
					this.SendPropertyChanging();
					this._Apellido = value;
					this.SendPropertyChanged("Apellido");
					this.OnApellidoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sexo", DbType="Bit")]
		public System.Nullable<bool> Sexo
		{
			get
			{
				return this._Sexo;
			}
			set
			{
				if ((this._Sexo != value))
				{
					this.OnSexoChanging(value);
					this.SendPropertyChanging();
					this._Sexo = value;
					this.SendPropertyChanged("Sexo");
					this.OnSexoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cedula", DbType="VarChar(16)")]
		public string Cedula
		{
			get
			{
				return this._Cedula;
			}
			set
			{
				if ((this._Cedula != value))
				{
					this.OnCedulaChanging(value);
					this.SendPropertyChanging();
					this._Cedula = value;
					this.SendPropertyChanged("Cedula");
					this.OnCedulaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Edad", DbType="Int")]
		public System.Nullable<int> Edad
		{
			get
			{
				return this._Edad;
			}
			set
			{
				if ((this._Edad != value))
				{
					this.OnEdadChanging(value);
					this.SendPropertyChanging();
					this._Edad = value;
					this.SendPropertyChanged("Edad");
					this.OnEdadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Telefono", DbType="VarChar(25)")]
		public string Telefono
		{
			get
			{
				return this._Telefono;
			}
			set
			{
				if ((this._Telefono != value))
				{
					this.OnTelefonoChanging(value);
					this.SendPropertyChanging();
					this._Telefono = value;
					this.SendPropertyChanged("Telefono");
					this.OnTelefonoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Direccion", DbType="VarChar(100)")]
		public string Direccion
		{
			get
			{
				return this._Direccion;
			}
			set
			{
				if ((this._Direccion != value))
				{
					this.OnDireccionChanging(value);
					this.SendPropertyChanging();
					this._Direccion = value;
					this.SendPropertyChanged("Direccion");
					this.OnDireccionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comarca", DbType="VarChar(40)")]
		public string Comarca
		{
			get
			{
				return this._Comarca;
			}
			set
			{
				if ((this._Comarca != value))
				{
					this.OnComarcaChanging(value);
					this.SendPropertyChanging();
					this._Comarca = value;
					this.SendPropertyChanged("Comarca");
					this.OnComarcaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodWeb", DbType="VarChar(10)")]
		public string CodWeb
		{
			get
			{
				return this._CodWeb;
			}
			set
			{
				if ((this._CodWeb != value))
				{
					this.OnCodWebChanging(value);
					this.SendPropertyChanging();
					this._CodWeb = value;
					this.SendPropertyChanged("CodWeb");
					this.OnCodWebChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodMunicipio", DbType="Int NOT NULL")]
		public int CodMunicipio
		{
			get
			{
				return this._CodMunicipio;
			}
			set
			{
				if ((this._CodMunicipio != value))
				{
					if (this._Municipio.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCodMunicipioChanging(value);
					this.SendPropertyChanging();
					this._CodMunicipio = value;
					this.SendPropertyChanged("CodMunicipio");
					this.OnCodMunicipioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Cliente_Contrato", Storage="_Contrato", ThisKey="IdCliente", OtherKey="CodCliente")]
		public EntitySet<Contrato> Contrato
		{
			get
			{
				return this._Contrato;
			}
			set
			{
				this._Contrato.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Cliente_Finca", Storage="_Finca", ThisKey="IdCliente", OtherKey="CodCliente")]
		public EntitySet<Finca> Finca
		{
			get
			{
				return this._Finca;
			}
			set
			{
				this._Finca.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Municipio_Cliente", Storage="_Municipio", ThisKey="CodMunicipio", OtherKey="idMunicipio", IsForeignKey=true)]
		public Municipio Municipio
		{
			get
			{
				return this._Municipio.Entity;
			}
			set
			{
				Municipio previousValue = this._Municipio.Entity;
				if (((previousValue != value) 
							|| (this._Municipio.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Municipio.Entity = null;
						previousValue.Cliente.Remove(this);
					}
					this._Municipio.Entity = value;
					if ((value != null))
					{
						value.Cliente.Add(this);
						this._CodMunicipio = value.idMunicipio;
					}
					else
					{
						this._CodMunicipio = default(int);
					}
					this.SendPropertyChanged("Municipio");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Contrato(Contrato entity)
		{
			this.SendPropertyChanging();
			entity.Cliente = this;
		}
		
		private void detach_Contrato(Contrato entity)
		{
			this.SendPropertyChanging();
			entity.Cliente = null;
		}
		
		private void attach_Finca(Finca entity)
		{
			this.SendPropertyChanging();
			entity.Cliente = this;
		}
		
		private void detach_Finca(Finca entity)
		{
			this.SendPropertyChanging();
			entity.Cliente = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Contrato")]
	public partial class Contrato : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdContrato;
		
		private int _CodContrato;
		
		private int _CodCliente;
		
		private int _CodUsuario;
		
		private int _CodSucursal;
		
		private int _CodConvenio;
		
		private int _CodSectorProductivo;
		
		private int _CodProductoFinanciero;
		
		private double _MontoOtorgado;
		
		private System.DateTime _FechaDesembolso;
		
		private EntitySet<General> _General;
		
		private EntityRef<Cliente> _Cliente;
		
		private EntityRef<Convenio> _Convenio;
		
		private EntityRef<ProductoFinanciero> _ProductoFinanciero;
		
		private EntityRef<Sucursal> _Sucursal;
		
		private EntityRef<Usuario> _Usuario;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdContratoChanging(int value);
    partial void OnIdContratoChanged();
    partial void OnCodContratoChanging(int value);
    partial void OnCodContratoChanged();
    partial void OnCodClienteChanging(int value);
    partial void OnCodClienteChanged();
    partial void OnCodUsuarioChanging(int value);
    partial void OnCodUsuarioChanged();
    partial void OnCodSucursalChanging(int value);
    partial void OnCodSucursalChanged();
    partial void OnCodConvenioChanging(int value);
    partial void OnCodConvenioChanged();
    partial void OnCodSectorProductivoChanging(int value);
    partial void OnCodSectorProductivoChanged();
    partial void OnCodProductoFinancieroChanging(int value);
    partial void OnCodProductoFinancieroChanged();
    partial void OnMontoOtorgadoChanging(double value);
    partial void OnMontoOtorgadoChanged();
    partial void OnFechaDesembolsoChanging(System.DateTime value);
    partial void OnFechaDesembolsoChanged();
    #endregion
		
		public Contrato()
		{
			this._General = new EntitySet<General>(new Action<General>(this.attach_General), new Action<General>(this.detach_General));
			this._Cliente = default(EntityRef<Cliente>);
			this._Convenio = default(EntityRef<Convenio>);
			this._ProductoFinanciero = default(EntityRef<ProductoFinanciero>);
			this._Sucursal = default(EntityRef<Sucursal>);
			this._Usuario = default(EntityRef<Usuario>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdContrato", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdContrato
		{
			get
			{
				return this._IdContrato;
			}
			set
			{
				if ((this._IdContrato != value))
				{
					this.OnIdContratoChanging(value);
					this.SendPropertyChanging();
					this._IdContrato = value;
					this.SendPropertyChanged("IdContrato");
					this.OnIdContratoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodContrato", DbType="Int NOT NULL")]
		public int CodContrato
		{
			get
			{
				return this._CodContrato;
			}
			set
			{
				if ((this._CodContrato != value))
				{
					this.OnCodContratoChanging(value);
					this.SendPropertyChanging();
					this._CodContrato = value;
					this.SendPropertyChanged("CodContrato");
					this.OnCodContratoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodCliente", DbType="Int NOT NULL")]
		public int CodCliente
		{
			get
			{
				return this._CodCliente;
			}
			set
			{
				if ((this._CodCliente != value))
				{
					if (this._Cliente.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCodClienteChanging(value);
					this.SendPropertyChanging();
					this._CodCliente = value;
					this.SendPropertyChanged("CodCliente");
					this.OnCodClienteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodUsuario", DbType="Int NOT NULL")]
		public int CodUsuario
		{
			get
			{
				return this._CodUsuario;
			}
			set
			{
				if ((this._CodUsuario != value))
				{
					if (this._Usuario.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCodUsuarioChanging(value);
					this.SendPropertyChanging();
					this._CodUsuario = value;
					this.SendPropertyChanged("CodUsuario");
					this.OnCodUsuarioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodSucursal", DbType="Int NOT NULL")]
		public int CodSucursal
		{
			get
			{
				return this._CodSucursal;
			}
			set
			{
				if ((this._CodSucursal != value))
				{
					if (this._Sucursal.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCodSucursalChanging(value);
					this.SendPropertyChanging();
					this._CodSucursal = value;
					this.SendPropertyChanged("CodSucursal");
					this.OnCodSucursalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodConvenio", DbType="Int NOT NULL")]
		public int CodConvenio
		{
			get
			{
				return this._CodConvenio;
			}
			set
			{
				if ((this._CodConvenio != value))
				{
					if (this._Convenio.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCodConvenioChanging(value);
					this.SendPropertyChanging();
					this._CodConvenio = value;
					this.SendPropertyChanged("CodConvenio");
					this.OnCodConvenioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodSectorProductivo", DbType="Int NOT NULL")]
		public int CodSectorProductivo
		{
			get
			{
				return this._CodSectorProductivo;
			}
			set
			{
				if ((this._CodSectorProductivo != value))
				{
					this.OnCodSectorProductivoChanging(value);
					this.SendPropertyChanging();
					this._CodSectorProductivo = value;
					this.SendPropertyChanged("CodSectorProductivo");
					this.OnCodSectorProductivoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodProductoFinanciero", DbType="Int NOT NULL")]
		public int CodProductoFinanciero
		{
			get
			{
				return this._CodProductoFinanciero;
			}
			set
			{
				if ((this._CodProductoFinanciero != value))
				{
					if (this._ProductoFinanciero.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCodProductoFinancieroChanging(value);
					this.SendPropertyChanging();
					this._CodProductoFinanciero = value;
					this.SendPropertyChanged("CodProductoFinanciero");
					this.OnCodProductoFinancieroChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MontoOtorgado", DbType="Float NOT NULL")]
		public double MontoOtorgado
		{
			get
			{
				return this._MontoOtorgado;
			}
			set
			{
				if ((this._MontoOtorgado != value))
				{
					this.OnMontoOtorgadoChanging(value);
					this.SendPropertyChanging();
					this._MontoOtorgado = value;
					this.SendPropertyChanged("MontoOtorgado");
					this.OnMontoOtorgadoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FechaDesembolso", DbType="Date NOT NULL")]
		public System.DateTime FechaDesembolso
		{
			get
			{
				return this._FechaDesembolso;
			}
			set
			{
				if ((this._FechaDesembolso != value))
				{
					this.OnFechaDesembolsoChanging(value);
					this.SendPropertyChanging();
					this._FechaDesembolso = value;
					this.SendPropertyChanged("FechaDesembolso");
					this.OnFechaDesembolsoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Contrato_General", Storage="_General", ThisKey="IdContrato", OtherKey="IdContrato")]
		public EntitySet<General> General
		{
			get
			{
				return this._General;
			}
			set
			{
				this._General.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Cliente_Contrato", Storage="_Cliente", ThisKey="CodCliente", OtherKey="IdCliente", IsForeignKey=true)]
		public Cliente Cliente
		{
			get
			{
				return this._Cliente.Entity;
			}
			set
			{
				Cliente previousValue = this._Cliente.Entity;
				if (((previousValue != value) 
							|| (this._Cliente.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Cliente.Entity = null;
						previousValue.Contrato.Remove(this);
					}
					this._Cliente.Entity = value;
					if ((value != null))
					{
						value.Contrato.Add(this);
						this._CodCliente = value.IdCliente;
					}
					else
					{
						this._CodCliente = default(int);
					}
					this.SendPropertyChanged("Cliente");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Convenio_Contrato", Storage="_Convenio", ThisKey="CodConvenio", OtherKey="IdC", IsForeignKey=true)]
		public Convenio Convenio
		{
			get
			{
				return this._Convenio.Entity;
			}
			set
			{
				Convenio previousValue = this._Convenio.Entity;
				if (((previousValue != value) 
							|| (this._Convenio.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Convenio.Entity = null;
						previousValue.Contrato.Remove(this);
					}
					this._Convenio.Entity = value;
					if ((value != null))
					{
						value.Contrato.Add(this);
						this._CodConvenio = value.IdC;
					}
					else
					{
						this._CodConvenio = default(int);
					}
					this.SendPropertyChanged("Convenio");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProductoFinanciero_Contrato", Storage="_ProductoFinanciero", ThisKey="CodProductoFinanciero", OtherKey="IdProducto", IsForeignKey=true)]
		public ProductoFinanciero ProductoFinanciero
		{
			get
			{
				return this._ProductoFinanciero.Entity;
			}
			set
			{
				ProductoFinanciero previousValue = this._ProductoFinanciero.Entity;
				if (((previousValue != value) 
							|| (this._ProductoFinanciero.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ProductoFinanciero.Entity = null;
						previousValue.Contrato.Remove(this);
					}
					this._ProductoFinanciero.Entity = value;
					if ((value != null))
					{
						value.Contrato.Add(this);
						this._CodProductoFinanciero = value.IdProducto;
					}
					else
					{
						this._CodProductoFinanciero = default(int);
					}
					this.SendPropertyChanged("ProductoFinanciero");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Sucursal_Contrato", Storage="_Sucursal", ThisKey="CodSucursal", OtherKey="IdSucursal", IsForeignKey=true)]
		public Sucursal Sucursal
		{
			get
			{
				return this._Sucursal.Entity;
			}
			set
			{
				Sucursal previousValue = this._Sucursal.Entity;
				if (((previousValue != value) 
							|| (this._Sucursal.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Sucursal.Entity = null;
						previousValue.Contrato.Remove(this);
					}
					this._Sucursal.Entity = value;
					if ((value != null))
					{
						value.Contrato.Add(this);
						this._CodSucursal = value.IdSucursal;
					}
					else
					{
						this._CodSucursal = default(int);
					}
					this.SendPropertyChanged("Sucursal");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Usuario_Contrato", Storage="_Usuario", ThisKey="CodUsuario", OtherKey="IdUsuario", IsForeignKey=true)]
		public Usuario Usuario
		{
			get
			{
				return this._Usuario.Entity;
			}
			set
			{
				Usuario previousValue = this._Usuario.Entity;
				if (((previousValue != value) 
							|| (this._Usuario.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Usuario.Entity = null;
						previousValue.Contrato.Remove(this);
					}
					this._Usuario.Entity = value;
					if ((value != null))
					{
						value.Contrato.Add(this);
						this._CodUsuario = value.IdUsuario;
					}
					else
					{
						this._CodUsuario = default(int);
					}
					this.SendPropertyChanged("Usuario");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_General(General entity)
		{
			this.SendPropertyChanging();
			entity.Contrato = this;
		}
		
		private void detach_General(General entity)
		{
			this.SendPropertyChanging();
			entity.Contrato = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.GeneralDetalle")]
	public partial class GeneralDetalle : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Nullable<int> _IdIndicador;
		
		private System.Nullable<double> _AvanceCuantitativo;
		
		private int _CodEvento;
		
		private System.Nullable<System.DateTime> _Fecha;
		
		private EntityRef<Indicador> _Indicador;
		
		private EntityRef<General> _General;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnIdIndicadorChanging(System.Nullable<int> value);
    partial void OnIdIndicadorChanged();
    partial void OnAvanceCuantitativoChanging(System.Nullable<double> value);
    partial void OnAvanceCuantitativoChanged();
    partial void OnCodEventoChanging(int value);
    partial void OnCodEventoChanged();
    partial void OnFechaChanging(System.Nullable<System.DateTime> value);
    partial void OnFechaChanged();
    #endregion
		
		public GeneralDetalle()
		{
			this._Indicador = default(EntityRef<Indicador>);
			this._General = default(EntityRef<General>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdIndicador", DbType="Int")]
		public System.Nullable<int> IdIndicador
		{
			get
			{
				return this._IdIndicador;
			}
			set
			{
				if ((this._IdIndicador != value))
				{
					if (this._Indicador.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdIndicadorChanging(value);
					this.SendPropertyChanging();
					this._IdIndicador = value;
					this.SendPropertyChanged("IdIndicador");
					this.OnIdIndicadorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AvanceCuantitativo", DbType="Float")]
		public System.Nullable<double> AvanceCuantitativo
		{
			get
			{
				return this._AvanceCuantitativo;
			}
			set
			{
				if ((this._AvanceCuantitativo != value))
				{
					this.OnAvanceCuantitativoChanging(value);
					this.SendPropertyChanging();
					this._AvanceCuantitativo = value;
					this.SendPropertyChanged("AvanceCuantitativo");
					this.OnAvanceCuantitativoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodEvento", DbType="Int NOT NULL")]
		public int CodEvento
		{
			get
			{
				return this._CodEvento;
			}
			set
			{
				if ((this._CodEvento != value))
				{
					if (this._General.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCodEventoChanging(value);
					this.SendPropertyChanging();
					this._CodEvento = value;
					this.SendPropertyChanged("CodEvento");
					this.OnCodEventoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fecha", DbType="DateTime")]
		public System.Nullable<System.DateTime> Fecha
		{
			get
			{
				return this._Fecha;
			}
			set
			{
				if ((this._Fecha != value))
				{
					this.OnFechaChanging(value);
					this.SendPropertyChanging();
					this._Fecha = value;
					this.SendPropertyChanged("Fecha");
					this.OnFechaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Indicador_GeneralDetalle", Storage="_Indicador", ThisKey="IdIndicador", OtherKey="IdIndicador", IsForeignKey=true)]
		public Indicador Indicador
		{
			get
			{
				return this._Indicador.Entity;
			}
			set
			{
				Indicador previousValue = this._Indicador.Entity;
				if (((previousValue != value) 
							|| (this._Indicador.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Indicador.Entity = null;
						previousValue.GeneralDetalle.Remove(this);
					}
					this._Indicador.Entity = value;
					if ((value != null))
					{
						value.GeneralDetalle.Add(this);
						this._IdIndicador = value.IdIndicador;
					}
					else
					{
						this._IdIndicador = default(Nullable<int>);
					}
					this.SendPropertyChanged("Indicador");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="General_GeneralDetalle", Storage="_General", ThisKey="CodEvento", OtherKey="Id", IsForeignKey=true)]
		public General General
		{
			get
			{
				return this._General.Entity;
			}
			set
			{
				General previousValue = this._General.Entity;
				if (((previousValue != value) 
							|| (this._General.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._General.Entity = null;
						previousValue.GeneralDetalle.Remove(this);
					}
					this._General.Entity = value;
					if ((value != null))
					{
						value.GeneralDetalle.Add(this);
						this._CodEvento = value.Id;
					}
					else
					{
						this._CodEvento = default(int);
					}
					this.SendPropertyChanged("General");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.General")]
	public partial class General : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _IdEvento;
		
		private int _IdContrato;
		
		private System.Nullable<int> _EventosPactados;
		
		private System.Nullable<int> _EventosEjecutados;
		
		private System.Nullable<System.DateTime> _FechaInicio;
		
		private System.Nullable<System.DateTime> _FechaFin;
		
		private string _Estado;
		
		private string _Otros;
		
		private EntitySet<GeneralDetalle> _GeneralDetalle;
		
		private EntityRef<Contrato> _Contrato;
		
		private EntityRef<Eventos> _Eventos;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnIdEventoChanging(int value);
    partial void OnIdEventoChanged();
    partial void OnIdContratoChanging(int value);
    partial void OnIdContratoChanged();
    partial void OnEventosPactadosChanging(System.Nullable<int> value);
    partial void OnEventosPactadosChanged();
    partial void OnEventosEjecutadosChanging(System.Nullable<int> value);
    partial void OnEventosEjecutadosChanged();
    partial void OnFechaInicioChanging(System.Nullable<System.DateTime> value);
    partial void OnFechaInicioChanged();
    partial void OnFechaFinChanging(System.Nullable<System.DateTime> value);
    partial void OnFechaFinChanged();
    partial void OnEstadoChanging(string value);
    partial void OnEstadoChanged();
    partial void OnOtrosChanging(string value);
    partial void OnOtrosChanged();
    #endregion
		
		public General()
		{
			this._GeneralDetalle = new EntitySet<GeneralDetalle>(new Action<GeneralDetalle>(this.attach_GeneralDetalle), new Action<GeneralDetalle>(this.detach_GeneralDetalle));
			this._Contrato = default(EntityRef<Contrato>);
			this._Eventos = default(EntityRef<Eventos>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdEvento", DbType="Int NOT NULL")]
		public int IdEvento
		{
			get
			{
				return this._IdEvento;
			}
			set
			{
				if ((this._IdEvento != value))
				{
					if (this._Eventos.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdEventoChanging(value);
					this.SendPropertyChanging();
					this._IdEvento = value;
					this.SendPropertyChanged("IdEvento");
					this.OnIdEventoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdContrato", DbType="Int NOT NULL")]
		public int IdContrato
		{
			get
			{
				return this._IdContrato;
			}
			set
			{
				if ((this._IdContrato != value))
				{
					if (this._Contrato.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdContratoChanging(value);
					this.SendPropertyChanging();
					this._IdContrato = value;
					this.SendPropertyChanged("IdContrato");
					this.OnIdContratoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventosPactados", DbType="Int")]
		public System.Nullable<int> EventosPactados
		{
			get
			{
				return this._EventosPactados;
			}
			set
			{
				if ((this._EventosPactados != value))
				{
					this.OnEventosPactadosChanging(value);
					this.SendPropertyChanging();
					this._EventosPactados = value;
					this.SendPropertyChanged("EventosPactados");
					this.OnEventosPactadosChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventosEjecutados", DbType="Int")]
		public System.Nullable<int> EventosEjecutados
		{
			get
			{
				return this._EventosEjecutados;
			}
			set
			{
				if ((this._EventosEjecutados != value))
				{
					this.OnEventosEjecutadosChanging(value);
					this.SendPropertyChanging();
					this._EventosEjecutados = value;
					this.SendPropertyChanged("EventosEjecutados");
					this.OnEventosEjecutadosChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FechaInicio", DbType="DateTime")]
		public System.Nullable<System.DateTime> FechaInicio
		{
			get
			{
				return this._FechaInicio;
			}
			set
			{
				if ((this._FechaInicio != value))
				{
					this.OnFechaInicioChanging(value);
					this.SendPropertyChanging();
					this._FechaInicio = value;
					this.SendPropertyChanged("FechaInicio");
					this.OnFechaInicioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FechaFin", DbType="DateTime")]
		public System.Nullable<System.DateTime> FechaFin
		{
			get
			{
				return this._FechaFin;
			}
			set
			{
				if ((this._FechaFin != value))
				{
					this.OnFechaFinChanging(value);
					this.SendPropertyChanging();
					this._FechaFin = value;
					this.SendPropertyChanged("FechaFin");
					this.OnFechaFinChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Estado", DbType="VarChar(50)")]
		public string Estado
		{
			get
			{
				return this._Estado;
			}
			set
			{
				if ((this._Estado != value))
				{
					this.OnEstadoChanging(value);
					this.SendPropertyChanging();
					this._Estado = value;
					this.SendPropertyChanged("Estado");
					this.OnEstadoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Otros", DbType="VarChar(50)")]
		public string Otros
		{
			get
			{
				return this._Otros;
			}
			set
			{
				if ((this._Otros != value))
				{
					this.OnOtrosChanging(value);
					this.SendPropertyChanging();
					this._Otros = value;
					this.SendPropertyChanged("Otros");
					this.OnOtrosChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="General_GeneralDetalle", Storage="_GeneralDetalle", ThisKey="Id", OtherKey="CodEvento")]
		public EntitySet<GeneralDetalle> GeneralDetalle
		{
			get
			{
				return this._GeneralDetalle;
			}
			set
			{
				this._GeneralDetalle.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Contrato_General", Storage="_Contrato", ThisKey="IdContrato", OtherKey="IdContrato", IsForeignKey=true)]
		public Contrato Contrato
		{
			get
			{
				return this._Contrato.Entity;
			}
			set
			{
				Contrato previousValue = this._Contrato.Entity;
				if (((previousValue != value) 
							|| (this._Contrato.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Contrato.Entity = null;
						previousValue.General.Remove(this);
					}
					this._Contrato.Entity = value;
					if ((value != null))
					{
						value.General.Add(this);
						this._IdContrato = value.IdContrato;
					}
					else
					{
						this._IdContrato = default(int);
					}
					this.SendPropertyChanged("Contrato");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Eventos_General", Storage="_Eventos", ThisKey="IdEvento", OtherKey="IdEvento", IsForeignKey=true)]
		public Eventos Eventos
		{
			get
			{
				return this._Eventos.Entity;
			}
			set
			{
				Eventos previousValue = this._Eventos.Entity;
				if (((previousValue != value) 
							|| (this._Eventos.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Eventos.Entity = null;
						previousValue.General.Remove(this);
					}
					this._Eventos.Entity = value;
					if ((value != null))
					{
						value.General.Add(this);
						this._IdEvento = value.IdEvento;
					}
					else
					{
						this._IdEvento = default(int);
					}
					this.SendPropertyChanged("Eventos");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_GeneralDetalle(GeneralDetalle entity)
		{
			this.SendPropertyChanging();
			entity.General = this;
		}
		
		private void detach_GeneralDetalle(GeneralDetalle entity)
		{
			this.SendPropertyChanging();
			entity.General = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.VistaClienteLista")]
	public partial class VistaClienteLista
	{
		
		private int _IdCliente;
		
		private string _Nombre;
		
		private string _Apellido;
		
		private string _Cédula;
		
		private System.Nullable<int> _Edad;
		
		private string _Teléfono;
		
		private string _Dirección;
		
		private string _Comarca;
		
		private string _Municipio;
		
		private string _Código_Web;
		
		private string _Género;
		
		public VistaClienteLista()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdCliente", DbType="Int NOT NULL")]
		public int IdCliente
		{
			get
			{
				return this._IdCliente;
			}
			set
			{
				if ((this._IdCliente != value))
				{
					this._IdCliente = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nombre", DbType="VarChar(60) NOT NULL", CanBeNull=false)]
		public string Nombre
		{
			get
			{
				return this._Nombre;
			}
			set
			{
				if ((this._Nombre != value))
				{
					this._Nombre = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Apellido", DbType="VarChar(60) NOT NULL", CanBeNull=false)]
		public string Apellido
		{
			get
			{
				return this._Apellido;
			}
			set
			{
				if ((this._Apellido != value))
				{
					this._Apellido = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cédula", DbType="VarChar(16)")]
		public string Cédula
		{
			get
			{
				return this._Cédula;
			}
			set
			{
				if ((this._Cédula != value))
				{
					this._Cédula = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Edad", DbType="Int")]
		public System.Nullable<int> Edad
		{
			get
			{
				return this._Edad;
			}
			set
			{
				if ((this._Edad != value))
				{
					this._Edad = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Teléfono", DbType="VarChar(25)")]
		public string Teléfono
		{
			get
			{
				return this._Teléfono;
			}
			set
			{
				if ((this._Teléfono != value))
				{
					this._Teléfono = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Dirección", DbType="VarChar(100)")]
		public string Dirección
		{
			get
			{
				return this._Dirección;
			}
			set
			{
				if ((this._Dirección != value))
				{
					this._Dirección = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comarca", DbType="VarChar(40)")]
		public string Comarca
		{
			get
			{
				return this._Comarca;
			}
			set
			{
				if ((this._Comarca != value))
				{
					this._Comarca = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Municipio", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string Municipio
		{
			get
			{
				return this._Municipio;
			}
			set
			{
				if ((this._Municipio != value))
				{
					this._Municipio = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Código Web]", Storage="_Código_Web", DbType="VarChar(10)")]
		public string Código_Web
		{
			get
			{
				return this._Código_Web;
			}
			set
			{
				if ((this._Código_Web != value))
				{
					this._Código_Web = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Género", DbType="VarChar(9)")]
		public string Género
		{
			get
			{
				return this._Género;
			}
			set
			{
				if ((this._Género != value))
				{
					this._Género = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.VistaUsuarioLista")]
	public partial class VistaUsuarioLista
	{
		
		private int _IdUsuario;
		
		private string _Nombre;
		
		private string _Apellido;
		
		private string _Telefono;
		
		private string _Direccion;
		
		private string _Celular;
		
		private string _Cedula;
		
		private string _Categoria;
		
		private string _Responsable;
		
		public VistaUsuarioLista()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdUsuario", DbType="Int NOT NULL")]
		public int IdUsuario
		{
			get
			{
				return this._IdUsuario;
			}
			set
			{
				if ((this._IdUsuario != value))
				{
					this._IdUsuario = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nombre", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string Nombre
		{
			get
			{
				return this._Nombre;
			}
			set
			{
				if ((this._Nombre != value))
				{
					this._Nombre = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Apellido", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string Apellido
		{
			get
			{
				return this._Apellido;
			}
			set
			{
				if ((this._Apellido != value))
				{
					this._Apellido = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Telefono", DbType="VarChar(20)")]
		public string Telefono
		{
			get
			{
				return this._Telefono;
			}
			set
			{
				if ((this._Telefono != value))
				{
					this._Telefono = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Direccion", DbType="VarChar(100)")]
		public string Direccion
		{
			get
			{
				return this._Direccion;
			}
			set
			{
				if ((this._Direccion != value))
				{
					this._Direccion = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Celular", DbType="VarChar(30)")]
		public string Celular
		{
			get
			{
				return this._Celular;
			}
			set
			{
				if ((this._Celular != value))
				{
					this._Celular = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cedula", DbType="VarChar(16)")]
		public string Cedula
		{
			get
			{
				return this._Cedula;
			}
			set
			{
				if ((this._Cedula != value))
				{
					this._Cedula = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Categoria", DbType="VarChar(12) NOT NULL", CanBeNull=false)]
		public string Categoria
		{
			get
			{
				return this._Categoria;
			}
			set
			{
				if ((this._Categoria != value))
				{
					this._Categoria = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Responsable", DbType="VarChar(30)")]
		public string Responsable
		{
			get
			{
				return this._Responsable;
			}
			set
			{
				if ((this._Responsable != value))
				{
					this._Responsable = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.VistaEventos")]
	public partial class VistaEventos
	{
		
		private string _Nombre;
		
		private string _Apellido;
		
		private string _Titulo_del_Evento;
		
		private string _Tipo_de_Evento;
		
		private System.Nullable<int> _Eventos_Pactados;
		
		private System.Nullable<int> _Eventos_Ejecutados;
		
		private System.Nullable<System.DateTime> _Fecha_Inicio;
		
		private System.Nullable<System.DateTime> _Fecha_Fin;
		
		private string _Estado;
		
		private string _Otros;
		
		public VistaEventos()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nombre", DbType="VarChar(30)")]
		public string Nombre
		{
			get
			{
				return this._Nombre;
			}
			set
			{
				if ((this._Nombre != value))
				{
					this._Nombre = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Apellido", DbType="VarChar(30)")]
		public string Apellido
		{
			get
			{
				return this._Apellido;
			}
			set
			{
				if ((this._Apellido != value))
				{
					this._Apellido = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Titulo del Evento]", Storage="_Titulo_del_Evento", DbType="VarChar(20)")]
		public string Titulo_del_Evento
		{
			get
			{
				return this._Titulo_del_Evento;
			}
			set
			{
				if ((this._Titulo_del_Evento != value))
				{
					this._Titulo_del_Evento = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Tipo de Evento]", Storage="_Tipo_de_Evento", DbType="VarChar(20)")]
		public string Tipo_de_Evento
		{
			get
			{
				return this._Tipo_de_Evento;
			}
			set
			{
				if ((this._Tipo_de_Evento != value))
				{
					this._Tipo_de_Evento = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Eventos Pactados]", Storage="_Eventos_Pactados", DbType="Int")]
		public System.Nullable<int> Eventos_Pactados
		{
			get
			{
				return this._Eventos_Pactados;
			}
			set
			{
				if ((this._Eventos_Pactados != value))
				{
					this._Eventos_Pactados = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Eventos Ejecutados]", Storage="_Eventos_Ejecutados", DbType="Int")]
		public System.Nullable<int> Eventos_Ejecutados
		{
			get
			{
				return this._Eventos_Ejecutados;
			}
			set
			{
				if ((this._Eventos_Ejecutados != value))
				{
					this._Eventos_Ejecutados = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Fecha Inicio]", Storage="_Fecha_Inicio", DbType="DateTime")]
		public System.Nullable<System.DateTime> Fecha_Inicio
		{
			get
			{
				return this._Fecha_Inicio;
			}
			set
			{
				if ((this._Fecha_Inicio != value))
				{
					this._Fecha_Inicio = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Fecha Fin]", Storage="_Fecha_Fin", DbType="DateTime")]
		public System.Nullable<System.DateTime> Fecha_Fin
		{
			get
			{
				return this._Fecha_Fin;
			}
			set
			{
				if ((this._Fecha_Fin != value))
				{
					this._Fecha_Fin = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Estado", DbType="VarChar(50)")]
		public string Estado
		{
			get
			{
				return this._Estado;
			}
			set
			{
				if ((this._Estado != value))
				{
					this._Estado = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Otros", DbType="VarChar(50)")]
		public string Otros
		{
			get
			{
				return this._Otros;
			}
			set
			{
				if ((this._Otros != value))
				{
					this._Otros = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Finca")]
	public partial class Finca : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdFinca;
		
		private double _HaTotalFinca;
		
		private double _HaEfectiva;
		
		private double _UsoActualSuelo;
		
		private int _CodCliente;
		
		private string _Coordenada_X_UTM;
		
		private string _Coordenada_Y_UTM;
		
		private string _Coordenada_Y_GMS;
		
		private string _Coordenada_X_GMS;
		
		private EntityRef<Cliente> _Cliente;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdFincaChanging(int value);
    partial void OnIdFincaChanged();
    partial void OnHaTotalFincaChanging(double value);
    partial void OnHaTotalFincaChanged();
    partial void OnHaEfectivaChanging(double value);
    partial void OnHaEfectivaChanged();
    partial void OnUsoActualSueloChanging(double value);
    partial void OnUsoActualSueloChanged();
    partial void OnCodClienteChanging(int value);
    partial void OnCodClienteChanged();
    partial void OnCoordenada_X_UTMChanging(string value);
    partial void OnCoordenada_X_UTMChanged();
    partial void OnCoordenada_Y_UTMChanging(string value);
    partial void OnCoordenada_Y_UTMChanged();
    partial void OnCoordenada_Y_GMSChanging(string value);
    partial void OnCoordenada_Y_GMSChanged();
    partial void OnCoordenada_X_GMSChanging(string value);
    partial void OnCoordenada_X_GMSChanged();
    #endregion
		
		public Finca()
		{
			this._Cliente = default(EntityRef<Cliente>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdFinca", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdFinca
		{
			get
			{
				return this._IdFinca;
			}
			set
			{
				if ((this._IdFinca != value))
				{
					this.OnIdFincaChanging(value);
					this.SendPropertyChanging();
					this._IdFinca = value;
					this.SendPropertyChanged("IdFinca");
					this.OnIdFincaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HaTotalFinca", DbType="Float NOT NULL")]
		public double HaTotalFinca
		{
			get
			{
				return this._HaTotalFinca;
			}
			set
			{
				if ((this._HaTotalFinca != value))
				{
					this.OnHaTotalFincaChanging(value);
					this.SendPropertyChanging();
					this._HaTotalFinca = value;
					this.SendPropertyChanged("HaTotalFinca");
					this.OnHaTotalFincaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HaEfectiva", DbType="Float NOT NULL")]
		public double HaEfectiva
		{
			get
			{
				return this._HaEfectiva;
			}
			set
			{
				if ((this._HaEfectiva != value))
				{
					this.OnHaEfectivaChanging(value);
					this.SendPropertyChanging();
					this._HaEfectiva = value;
					this.SendPropertyChanged("HaEfectiva");
					this.OnHaEfectivaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UsoActualSuelo", DbType="Float NOT NULL")]
		public double UsoActualSuelo
		{
			get
			{
				return this._UsoActualSuelo;
			}
			set
			{
				if ((this._UsoActualSuelo != value))
				{
					this.OnUsoActualSueloChanging(value);
					this.SendPropertyChanging();
					this._UsoActualSuelo = value;
					this.SendPropertyChanged("UsoActualSuelo");
					this.OnUsoActualSueloChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodCliente", DbType="Int NOT NULL")]
		public int CodCliente
		{
			get
			{
				return this._CodCliente;
			}
			set
			{
				if ((this._CodCliente != value))
				{
					if (this._Cliente.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCodClienteChanging(value);
					this.SendPropertyChanging();
					this._CodCliente = value;
					this.SendPropertyChanged("CodCliente");
					this.OnCodClienteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Coordenada_X_UTM", DbType="VarChar(50)")]
		public string Coordenada_X_UTM
		{
			get
			{
				return this._Coordenada_X_UTM;
			}
			set
			{
				if ((this._Coordenada_X_UTM != value))
				{
					this.OnCoordenada_X_UTMChanging(value);
					this.SendPropertyChanging();
					this._Coordenada_X_UTM = value;
					this.SendPropertyChanged("Coordenada_X_UTM");
					this.OnCoordenada_X_UTMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Coordenada_Y_UTM", DbType="VarChar(50)")]
		public string Coordenada_Y_UTM
		{
			get
			{
				return this._Coordenada_Y_UTM;
			}
			set
			{
				if ((this._Coordenada_Y_UTM != value))
				{
					this.OnCoordenada_Y_UTMChanging(value);
					this.SendPropertyChanging();
					this._Coordenada_Y_UTM = value;
					this.SendPropertyChanged("Coordenada_Y_UTM");
					this.OnCoordenada_Y_UTMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Coordenada_Y_GMS", DbType="VarChar(50)")]
		public string Coordenada_Y_GMS
		{
			get
			{
				return this._Coordenada_Y_GMS;
			}
			set
			{
				if ((this._Coordenada_Y_GMS != value))
				{
					this.OnCoordenada_Y_GMSChanging(value);
					this.SendPropertyChanging();
					this._Coordenada_Y_GMS = value;
					this.SendPropertyChanged("Coordenada_Y_GMS");
					this.OnCoordenada_Y_GMSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Coordenada_X_GMS", DbType="VarChar(50)")]
		public string Coordenada_X_GMS
		{
			get
			{
				return this._Coordenada_X_GMS;
			}
			set
			{
				if ((this._Coordenada_X_GMS != value))
				{
					this.OnCoordenada_X_GMSChanging(value);
					this.SendPropertyChanging();
					this._Coordenada_X_GMS = value;
					this.SendPropertyChanged("Coordenada_X_GMS");
					this.OnCoordenada_X_GMSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Cliente_Finca", Storage="_Cliente", ThisKey="CodCliente", OtherKey="IdCliente", IsForeignKey=true)]
		public Cliente Cliente
		{
			get
			{
				return this._Cliente.Entity;
			}
			set
			{
				Cliente previousValue = this._Cliente.Entity;
				if (((previousValue != value) 
							|| (this._Cliente.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Cliente.Entity = null;
						previousValue.Finca.Remove(this);
					}
					this._Cliente.Entity = value;
					if ((value != null))
					{
						value.Finca.Add(this);
						this._CodCliente = value.IdCliente;
					}
					else
					{
						this._CodCliente = default(int);
					}
					this.SendPropertyChanged("Cliente");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
